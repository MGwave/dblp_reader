ACM_labels.txt
25854	'Information_management_challenges_from_the_aerospace_industry__The_aerospace_industry_poses_significant_challenges_to_information_management_unlike_any_other_industry._Data_management_challenges_arising_from_different_segments_of_the_aerospace_business_are_identified_through_illustrative_scenarios._These_examples_and_challenges_could_provide_focus_and_stimulus_to_further_research_in_information_management._'	candidate size: 12499
25770	'Foundation_matters__This_talk_is_meant_as_a_wake-up_call_..._The_foundation_of_the_database_field_is,_of_course,_the_relational_model._Sad_to_say,_however,_there_are_some_in_the_database_community--certainly_in_industry,_and_to_some_extent_in_academia_also--who_do_not_seem_to_be_as_familiar_with_that_model_as_they_ought_to_be;_there_are_others_who_seem_to_think_it_is_not_very_interesting_or_relevant_to_the_day-today_business_of_earning_a_living;_and_there_are_still_others_who_seem_to_think_all_of_the_foundation-level_problems_have_been_solved._Indeed,_there_seems_to_be_a_widespread_feeling_that_"the_world_has_moved_on,"_so_to_speak,_and_the_relational_model_as_such_is_somehow_pass&#233;._In_my_opinion,_nothing_could_be_further_from_the_truth!_In_this_talk,_I_want_to_sketch_the_results_of_some_of_my_own_investigations_into_database_foundations_over_the_past_twenty_years_or_so;_my_aim_is_to_convey_some_of_the_excitement_and_abiding_interest_that_is_still_to_be_found_in_those_investigations,_with_a_view--I_hope--to_inspiring_others_in_the_field_to_become_involved_in_such_activities.___First_of_all,_almost_all_of_the_ideas_I_will_be_covering_either_are_part_of,_or_else_build_on_top_of,_The_Third_Manifesto_[1]._The_Third_Manifesto_is_a_detailed_proposal_for_the_future_direction_of_data_and_DBMSs._Like_Codds_original_papers_on_the_relational_model,_it_can_be_seen_as_an_abstract_blueprint_for_the_design_of_a_DBMS_and_the_language_interface_to_such_a_DBMS._Among_many_other_things:_&#8226;_It_shows_that_the_relational_model--and_I_do_mean_the_relational_model,_not_SQL--is_a_necessary_and_sufficient_foundation_on_which_to_build_"object/relational"_DBMSs_(sometimes_called_universal_servers)._&#8226;_It_also_points_out_certain_blunders_that_can_unfortunately_be_observed_in_some_of_todays_products_(not_to_mention_the_SQL:1999_standard)._&#8226;_And_it_explores_in_depth_the_idea_that_a_relational_database,_along_with_the_relational_operators,_is_really_a_logical_system_and_shows_how_that_idea_leads_to_a_solution_to_the_view_updating_problem,_among_other_things._'	candidate size: 12499
Time cost for this pair is 34.2 seconds
[P_V]	[P_V]^(-1)	
precision: 0.0208
[P_C]	[P_C]^(-1)	
precision: 0.0035
[P_C]	[V_C]^(-1)	[P_V]^(-1)	
precision: 0.0035

27097	'The_work_of_Leslie_Valiant__On_Saturday,_May_30,_one_day_before_the_start_of_the_regular_STOC_2009_program,_a_workshop_was_held_in_celebration_of_Leslie_Valiants_60th_birthday._Talks_were_given_by_Jin-Yi_Cai,_Stephen_Cook,_Vitaly_Feldman,_Mark_Jerrum,_Michael_Kearns,_Mike_Paterson,_Michael_Rabin,_Rocco_Servedio,_Paul_Valiant,_Vijay_Vazirani,_and_Avi_Wigderson._The_workshop_was_organized_by_Michael_Kearns,_Rocco_Servedio,_and_Salil_Vadhan,_with_support_from_the_STOC_local_arrangements_team_and_program_committee._To_accompany_the_workshop,_here_we_briefly_survey_Valiants_many_fundamental_contributions_to_the_theory_of_computing._'	candidate size: 12499
25770	'Foundation_matters__This_talk_is_meant_as_a_wake-up_call_..._The_foundation_of_the_database_field_is,_of_course,_the_relational_model._Sad_to_say,_however,_there_are_some_in_the_database_community--certainly_in_industry,_and_to_some_extent_in_academia_also--who_do_not_seem_to_be_as_familiar_with_that_model_as_they_ought_to_be;_there_are_others_who_seem_to_think_it_is_not_very_interesting_or_relevant_to_the_day-today_business_of_earning_a_living;_and_there_are_still_others_who_seem_to_think_all_of_the_foundation-level_problems_have_been_solved._Indeed,_there_seems_to_be_a_widespread_feeling_that_"the_world_has_moved_on,"_so_to_speak,_and_the_relational_model_as_such_is_somehow_pass&#233;._In_my_opinion,_nothing_could_be_further_from_the_truth!_In_this_talk,_I_want_to_sketch_the_results_of_some_of_my_own_investigations_into_database_foundations_over_the_past_twenty_years_or_so;_my_aim_is_to_convey_some_of_the_excitement_and_abiding_interest_that_is_still_to_be_found_in_those_investigations,_with_a_view--I_hope--to_inspiring_others_in_the_field_to_become_involved_in_such_activities.___First_of_all,_almost_all_of_the_ideas_I_will_be_covering_either_are_part_of,_or_else_build_on_top_of,_The_Third_Manifesto_[1]._The_Third_Manifesto_is_a_detailed_proposal_for_the_future_direction_of_data_and_DBMSs._Like_Codds_original_papers_on_the_relational_model,_it_can_be_seen_as_an_abstract_blueprint_for_the_design_of_a_DBMS_and_the_language_interface_to_such_a_DBMS._Among_many_other_things:_&#8226;_It_shows_that_the_relational_model--and_I_do_mean_the_relational_model,_not_SQL--is_a_necessary_and_sufficient_foundation_on_which_to_build_"object/relational"_DBMSs_(sometimes_called_universal_servers)._&#8226;_It_also_points_out_certain_blunders_that_can_unfortunately_be_observed_in_some_of_todays_products_(not_to_mention_the_SQL:1999_standard)._&#8226;_And_it_explores_in_depth_the_idea_that_a_relational_database,_along_with_the_relational_operators,_is_really_a_logical_system_and_shows_how_that_idea_leads_to_a_solution_to_the_view_updating_problem,_among_other_things._'	candidate size: 12499
Time cost for this pair is 708.5100 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0003
[P_A]	[A_F]	[A_F]^(-1)	[P_A]^(-1)	
precision: 0.0009

25854	'Information_management_challenges_from_the_aerospace_industry__The_aerospace_industry_poses_significant_challenges_to_information_management_unlike_any_other_industry._Data_management_challenges_arising_from_different_segments_of_the_aerospace_business_are_identified_through_illustrative_scenarios._These_examples_and_challenges_could_provide_focus_and_stimulus_to_further_research_in_information_management._'	candidate size: 12499
25770	'Foundation_matters__This_talk_is_meant_as_a_wake-up_call_..._The_foundation_of_the_database_field_is,_of_course,_the_relational_model._Sad_to_say,_however,_there_are_some_in_the_database_community--certainly_in_industry,_and_to_some_extent_in_academia_also--who_do_not_seem_to_be_as_familiar_with_that_model_as_they_ought_to_be;_there_are_others_who_seem_to_think_it_is_not_very_interesting_or_relevant_to_the_day-today_business_of_earning_a_living;_and_there_are_still_others_who_seem_to_think_all_of_the_foundation-level_problems_have_been_solved._Indeed,_there_seems_to_be_a_widespread_feeling_that_"the_world_has_moved_on,"_so_to_speak,_and_the_relational_model_as_such_is_somehow_pass&#233;._In_my_opinion,_nothing_could_be_further_from_the_truth!_In_this_talk,_I_want_to_sketch_the_results_of_some_of_my_own_investigations_into_database_foundations_over_the_past_twenty_years_or_so;_my_aim_is_to_convey_some_of_the_excitement_and_abiding_interest_that_is_still_to_be_found_in_those_investigations,_with_a_view--I_hope--to_inspiring_others_in_the_field_to_become_involved_in_such_activities.___First_of_all,_almost_all_of_the_ideas_I_will_be_covering_either_are_part_of,_or_else_build_on_top_of,_The_Third_Manifesto_[1]._The_Third_Manifesto_is_a_detailed_proposal_for_the_future_direction_of_data_and_DBMSs._Like_Codds_original_papers_on_the_relational_model,_it_can_be_seen_as_an_abstract_blueprint_for_the_design_of_a_DBMS_and_the_language_interface_to_such_a_DBMS._Among_many_other_things:_&#8226;_It_shows_that_the_relational_model--and_I_do_mean_the_relational_model,_not_SQL--is_a_necessary_and_sufficient_foundation_on_which_to_build_"object/relational"_DBMSs_(sometimes_called_universal_servers)._&#8226;_It_also_points_out_certain_blunders_that_can_unfortunately_be_observed_in_some_of_todays_products_(not_to_mention_the_SQL:1999_standard)._&#8226;_And_it_explores_in_depth_the_idea_that_a_relational_database,_along_with_the_relational_operators,_is_really_a_logical_system_and_shows_how_that_idea_leads_to_a_solution_to_the_view_updating_problem,_among_other_things._'	candidate size: 12499
Time cost for this pair is 34.1900 seconds
[P_V]	[P_V]^(-1)	
precision: 0.0208
[P_C]	[P_C]^(-1)	
precision: 0.0035
[P_C]	[V_C]^(-1)	[P_V]^(-1)	
precision: 0.0035

21030	'A_survey_of_public_web_services_This_paper_introduces_a_methodology_to_provide_the_first_characterization_of_public_Web_Services_in_terms_of_their_evolution,_location,_complexity,_message_size,_and_response_time.'	candidate size: 12499
22157	'Connecting_the_bottom_of_the_pyramid:_an_exploratory_case_study_of_indias_rural_communication_environment__This_paper_is_based_on_our_exploratory_study_of_a_South_Indian_village_in_Chamrajanagar_district_of_Karnataka._The_study_was_to_understand_the_rural_communication_environment_and_villagers._communication_preferences._We_examined_peoples_lifestyle,_working_conditions_and_their_communication_eco-system._Our_study_revealed_that_villagers,_unlike_urban_inhabitants,_interacted_with_people_outside_the_village_only_for_specific,_rather_than_casual_purposes._Another_interesting_aspect_of_rural_communication_was_the_marginal_use_of_the_postal_system_and_the_ubiquitous_use_of_pay_phone,_apart_from_word_of_mouth_and_face-to-face_interactions._In_fact,_personal_(face-to-face)_interaction_was_usually_preferred_among_villages_in_this_region,_over_other_kinds_of_communication,_despite_infrastructural_constraints_like_poor_transport_services.___We_also_observed_that_communication_frequency_increased_when_status_quo_changed_to_one_that_required_immediate_attention._During_the_analysis_we_identified_certain_social,_economic_and_cultural_communication_gaps_(or_problems)._However,_these_problems_were_clear_opportunities_to_connect_the_unconnected_rural_users,_by_deploying_new_communication_systems_and_features._Here,_we_have_highlighted_some_of_our_findings_and_possible_design_avenues_based_on_these_findings._'	candidate size: 12499
Time cost for this pair is 28.7100 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0012
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.0012

21030	'A_survey_of_public_web_services_This_paper_introduces_a_methodology_to_provide_the_first_characterization_of_public_Web_Services_in_terms_of_their_evolution,_location,_complexity,_message_size,_and_response_time.'	candidate size: 12499
22471	'__This_paper_surveys_and_compares_various_strategies_for_processing_logic_queries_in_relational_databases._The_survey_and_comparison_is_limited_to_the_case_of_Horn_Clauses_with_evaluable_predicates_but_without_function_symbols._The_paper_is_organized_in_three_parts._In_the_first_part,_we_introduce_the_main_concepts_and_definitions._In_the_second,_we_describe_the_various_strategies._For_each_strategy,_we_give_its_main_characteristics,_its_application_range_and_a_detailed_description._We_also_give_an_example_of_a_query_evaluation._The_third_part_of_the_paper_compares_the_strategies_on_performance_grounds._We_first_present_a_set_of_sample_rules_and_queries_which_are_used_for_the_performance_comparisons,_and_then_we_characterize_the_data._Finally,_we_give_an_analytical_solution_for_each_query/rule_system._Cost_curves_are_plotted_for_specific_configurations_of_the_data._'	candidate size: 12499
Time cost for this pair is 130.8200 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

22157	'Connecting_the_bottom_of_the_pyramid:_an_exploratory_case_study_of_indias_rural_communication_environment__This_paper_is_based_on_our_exploratory_study_of_a_South_Indian_village_in_Chamrajanagar_district_of_Karnataka._The_study_was_to_understand_the_rural_communication_environment_and_villagers._communication_preferences._We_examined_peoples_lifestyle,_working_conditions_and_their_communication_eco-system._Our_study_revealed_that_villagers,_unlike_urban_inhabitants,_interacted_with_people_outside_the_village_only_for_specific,_rather_than_casual_purposes._Another_interesting_aspect_of_rural_communication_was_the_marginal_use_of_the_postal_system_and_the_ubiquitous_use_of_pay_phone,_apart_from_word_of_mouth_and_face-to-face_interactions._In_fact,_personal_(face-to-face)_interaction_was_usually_preferred_among_villages_in_this_region,_over_other_kinds_of_communication,_despite_infrastructural_constraints_like_poor_transport_services.___We_also_observed_that_communication_frequency_increased_when_status_quo_changed_to_one_that_required_immediate_attention._During_the_analysis_we_identified_certain_social,_economic_and_cultural_communication_gaps_(or_problems)._However,_these_problems_were_clear_opportunities_to_connect_the_unconnected_rural_users,_by_deploying_new_communication_systems_and_features._Here,_we_have_highlighted_some_of_our_findings_and_possible_design_avenues_based_on_these_findings._'	candidate size: 12499
22471	'__This_paper_surveys_and_compares_various_strategies_for_processing_logic_queries_in_relational_databases._The_survey_and_comparison_is_limited_to_the_case_of_Horn_Clauses_with_evaluable_predicates_but_without_function_symbols._The_paper_is_organized_in_three_parts._In_the_first_part,_we_introduce_the_main_concepts_and_definitions._In_the_second,_we_describe_the_various_strategies._For_each_strategy,_we_give_its_main_characteristics,_its_application_range_and_a_detailed_description._We_also_give_an_example_of_a_query_evaluation._The_third_part_of_the_paper_compares_the_strategies_on_performance_grounds._We_first_present_a_set_of_sample_rules_and_queries_which_are_used_for_the_performance_comparisons,_and_then_we_characterize_the_data._Finally,_we_give_an_analytical_solution_for_each_query/rule_system._Cost_curves_are_plotted_for_specific_configurations_of_the_data._'	candidate size: 12499
Time cost for this pair is 133.8300 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

27556	'__The_paper_discusses_the_use_of_formal_specifications_for_conformance_testing_of_OSI_protocols_and_divides_the_discussion_in_two_parts:_test_design_and_tester_design._A_draft_standard_formal_specification_of_the_Class_4_transport_protocol_in_Estelle_is_taken_as_the_starting_point_for_test_design._The_test_design_technique_used_to_derive_a_conformance_test_suite_is_semi-formal_based_in_part_on_the_formal_specification_and_also_the_informal_specification._The_tests_obtained_are_expressed_in_natural_language._In_the_tester_design_part,_we_discuss_the_distributed_test_architecture_of_ISO_and_give_the_detailed_designs_of_upper_and_lower_testers._It_is_shown_that,_in_testing_Class_4_transport_implementations,_a_parametrized_protocol_implementation_approach_in_the_lower_tester_design,_renders_the_tests_easier_to_implement._'	candidate size: 12499
31555	'Cache-efficient_dynamic_programming_algorithms_for_multicores__We_present_cache-efficient_chip_multiprocessor_(CMP)_algorithms_with_good_speed-up_for_some_widely_used_dynamic_programming_algorithms._We_consider_three_types_of_caching_systems_for_CMPs:__D-CMP__with_a_private_cache_for_each_core,__S-CMP__with_a_single_cache_shared_by_all_cores,_and__Multicore_,_which_has_private__L__1__caches_and_a_shared__L__2__cache._We_derive_results_for_three_classes_of_problems:_local_dependency_dynamic_programming_(LDDP),_Gaussian_Elimination_Paradigm_(GEP),_and_parenthesis_problem.___For_each_class_of_problems,_we_develop_a_generic_CMP_algorithm_with_an_associated_tiling_sequence._We_then_tailor_this_tiling_sequence_to_each_caching_model_and_provide_a_parallel_schedule_that_results_in_a_cache-efficient_parallel_execution_up_to_the_critical_path_length_of_the_underlying_dynamic_programming_algorithm.___We_present_experimental_results_on_an_8-core_Opteron_for_two_sequence_alignment_problems_that_are_important_examples_of_LDDP._Our_experimental_results_show_good_speed-ups_for_simple_versions_of_our_algorithms._'	candidate size: 12499
Time cost for this pair is 114.5400 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

27556	'__The_paper_discusses_the_use_of_formal_specifications_for_conformance_testing_of_OSI_protocols_and_divides_the_discussion_in_two_parts:_test_design_and_tester_design._A_draft_standard_formal_specification_of_the_Class_4_transport_protocol_in_Estelle_is_taken_as_the_starting_point_for_test_design._The_test_design_technique_used_to_derive_a_conformance_test_suite_is_semi-formal_based_in_part_on_the_formal_specification_and_also_the_informal_specification._The_tests_obtained_are_expressed_in_natural_language._In_the_tester_design_part,_we_discuss_the_distributed_test_architecture_of_ISO_and_give_the_detailed_designs_of_upper_and_lower_testers._It_is_shown_that,_in_testing_Class_4_transport_implementations,_a_parametrized_protocol_implementation_approach_in_the_lower_tester_design,_renders_the_tests_easier_to_implement._'	candidate size: 12499
31555	'Cache-efficient_dynamic_programming_algorithms_for_multicores__We_present_cache-efficient_chip_multiprocessor_(CMP)_algorithms_with_good_speed-up_for_some_widely_used_dynamic_programming_algorithms._We_consider_three_types_of_caching_systems_for_CMPs:__D-CMP__with_a_private_cache_for_each_core,__S-CMP__with_a_single_cache_shared_by_all_cores,_and__Multicore_,_which_has_private__L__1__caches_and_a_shared__L__2__cache._We_derive_results_for_three_classes_of_problems:_local_dependency_dynamic_programming_(LDDP),_Gaussian_Elimination_Paradigm_(GEP),_and_parenthesis_problem.___For_each_class_of_problems,_we_develop_a_generic_CMP_algorithm_with_an_associated_tiling_sequence._We_then_tailor_this_tiling_sequence_to_each_caching_model_and_provide_a_parallel_schedule_that_results_in_a_cache-efficient_parallel_execution_up_to_the_critical_path_length_of_the_underlying_dynamic_programming_algorithm.___We_present_experimental_results_on_an_8-core_Opteron_for_two_sequence_alignment_problems_that_are_important_examples_of_LDDP._Our_experimental_results_show_good_speed-ups_for_simple_versions_of_our_algorithms._'	candidate size: 12499
Time cost for this pair is 114.6200 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0002
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0002

27556	'__The_paper_discusses_the_use_of_formal_specifications_for_conformance_testing_of_OSI_protocols_and_divides_the_discussion_in_two_parts:_test_design_and_tester_design._A_draft_standard_formal_specification_of_the_Class_4_transport_protocol_in_Estelle_is_taken_as_the_starting_point_for_test_design._The_test_design_technique_used_to_derive_a_conformance_test_suite_is_semi-formal_based_in_part_on_the_formal_specification_and_also_the_informal_specification._The_tests_obtained_are_expressed_in_natural_language._In_the_tester_design_part,_we_discuss_the_distributed_test_architecture_of_ISO_and_give_the_detailed_designs_of_upper_and_lower_testers._It_is_shown_that,_in_testing_Class_4_transport_implementations,_a_parametrized_protocol_implementation_approach_in_the_lower_tester_design,_renders_the_tests_easier_to_implement._'	candidate size: 12499
31555	'Cache-efficient_dynamic_programming_algorithms_for_multicores__We_present_cache-efficient_chip_multiprocessor_(CMP)_algorithms_with_good_speed-up_for_some_widely_used_dynamic_programming_algorithms._We_consider_three_types_of_caching_systems_for_CMPs:__D-CMP__with_a_private_cache_for_each_core,__S-CMP__with_a_single_cache_shared_by_all_cores,_and__Multicore_,_which_has_private__L__1__caches_and_a_shared__L__2__cache._We_derive_results_for_three_classes_of_problems:_local_dependency_dynamic_programming_(LDDP),_Gaussian_Elimination_Paradigm_(GEP),_and_parenthesis_problem.___For_each_class_of_problems,_we_develop_a_generic_CMP_algorithm_with_an_associated_tiling_sequence._We_then_tailor_this_tiling_sequence_to_each_caching_model_and_provide_a_parallel_schedule_that_results_in_a_cache-efficient_parallel_execution_up_to_the_critical_path_length_of_the_underlying_dynamic_programming_algorithm.___We_present_experimental_results_on_an_8-core_Opteron_for_two_sequence_alignment_problems_that_are_important_examples_of_LDDP._Our_experimental_results_show_good_speed-ups_for_simple_versions_of_our_algorithms._'	candidate size: 12499
Time cost for this pair is 114.6100 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

28655	'Verifying_sequential_consistency_using_vector_clocks_We_present_an_algorithm_for_dynamically_verifying_that_the_execution_of_a_multithreaded_program_is_sequentially_consistent._The_algorithm_uses_a_vector-timestamp_logical_time_mechanism_to_construct_and_verify_the_acyclic_nature_of_an_executions_constraint_graph.'	candidate size: 12499
22644	'__With_recent_declines_in_the_cost_of_semiconductor_memory_and_the_increasing_need_for_high_performance_I/O_disk_systems,_it_makes_sense_to_consider_the_design_of_large_caches._In_this_paper,_we_consider_the_effect_of_caching_writes._We_show_that_cache_sizes_in_the_range_of_a_few_percent_allow_writes_to_be_performed_at_negligible_or_no_cost_and_independently_of_locality_considerations._'	candidate size: 12499
Time cost for this pair is 196.2100 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0015
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0015
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0015

28655	'Verifying_sequential_consistency_using_vector_clocks_We_present_an_algorithm_for_dynamically_verifying_that_the_execution_of_a_multithreaded_program_is_sequentially_consistent._The_algorithm_uses_a_vector-timestamp_logical_time_mechanism_to_construct_and_verify_the_acyclic_nature_of_an_executions_constraint_graph.'	candidate size: 12499
28681	'How_to_reuse_a_&quot;write_-_once_&quot;_memory_(Preliminary_Version)__Storage_media_such_as_digital_optical_disks,_PROMS,_or_paper_tape_consist_of_a_number_of_-&-ldquo;write-once-&-rdquo;_bit_positions_(_wits_);_each_wit_initially_contains_a_-&-ldquo;0-&-rdquo;_that_may_later_be__irreversibly__overwritten_with_a_-&-ldquo;I-&-rdquo;._We_demonstrate_that_such_-&-ldquo;write-once_memories-&-rdquo;_(_woms_)_can_be_-&-ldquo;rewritten-&-rdquo;_to_a_surprising_degree._For_example,_only_3_wits_suffice_to_represent_any_2-bit_value_in_a_way_that_can_later_be_updated_to_represent_any_other_2-bit_value._For_large__k,__1.29...__k__wits_suffice_to_represent_a__k_-bit_value_in_a_way_that_can_be_similarly_updated._Most_surprising,_allowing__t__writes_of_a__k_-bit_value_requires_only__t__+__o_(_t_)_wits,_for_any_fixed__k_._For_fixed__t,__approximately__k.t_/log(_t_)_wits_are_required_as__k__-&-rarr;_@@@@._An__n_-wit_WOM_is_shown_to_have_a_-&-ldquo;capacity-&-rdquo;_(i.e.__k.t__when_writing_a__k_-bit_value__t__times)_of_up_to__n_.log(_n_)_bits._'	candidate size: 12499
Time cost for this pair is 169.1800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0015
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0015
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0015

22489	'__Consider_a_file_which_arranges_records_in_sequential_order,_and_stores_them_with_possible_empty_spaces_in_M_consecutive_pages_of_memory._We_develop_an_insertion-deletion_algorithm_which_runs_in_a_worst-case_time_approximately_proportional_to_log_2_M_divided_by_the_page-size_when_the_set_of_manipulated_records_has_cardinality_O(M)._'	candidate size: 12499
22554	'___Increasing_performance_of_CPUs_and_memories_will_be_squandered_if_not_matched_by_a_similar_performance_increase_in_I/O._While_the_capacity_of_Single_Large_Expensive_Disks_(SLED)_has_grown_rapidly,_the_performance_improvement_of_SLED_has_been_modest._Redundant_Arrays_of_Inexpensive_Disks_(RAID),_based_on_the_magnetic_disk_technology_developed_for_personal_computers,_offers_an_attractive_alternative_to_SLED,_promising_improvements_of_an_order_of_magnitude_in_performance,_reliability,_power_consumption,_and_scalability._This_paper_introduces_five_levels_of_RAIDs,_giving_their_relative_cost/performance,_and_compares_RAID_to_an_IBM_3380_and_a_Fujitsu_Super_Eagle.__'	candidate size: 12499
Time cost for this pair is 43.3200 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0028
[P_T]	[P_T]^(-1)	
precision: 0.0015
[P_P]^(-1)	[P_C]	[P_C]^(-1)	
precision: 0.0048

28136	'__A_multi-layer,_X.25_based_protocol_has_been_implemented_on_a_multiprocessor_system._The_higher_layer_protocol_resides_in_the_system_processor_while_the_lower_level_protocol_(X.25_levels_2_and_3)_runs_on_a_peripheral_processor._This_paper_focuses_on_the_boundary_between_the_system_and_peripheral_processors._It_discusses_how_flow_control_is_done,_how_control_information_is_passed_across_the_boundary,_and_the_synchronization_problems_that_arose._In_addition,_it_describes_effects_on_performance_resulting_from_splitting_the_protocol_across_the_two_processors._'	candidate size: 12499
27562	'__A_new_diagnostic_message_protocol_that_provides_fault_diagnosis_capabilities_for_the_communications_in_a_distributed_system_environment_is_described._The_protocol_is_designed_to_operate_in_conjunction_with_a_standard_end-to-end_communication_protocol_and_uses_special_messages_to_determine_the_system_fault_state._A_diagnosis_message_is_represented_using_a_test_dependency_model_that_is_derived_from_the_system_topology._These_messages_are_used_by_an_adaptive_strategy_designed_to_achieve_specific_objectives_such_as_reduced_testing_cost._Using_the_test_dependency_model,_a_general_purpose_algorithm_is_developed_for_generating_these_strategies_based_on_an_information_theory_criterion._Specific_properties_of_the_protocol_are_discussed,_and_several_examples_of_strategies_for_a_distributed_system_topology_are_provided._'	candidate size: 12499
Time cost for this pair is 25.2100 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0293
[P_C]	[V_C]^(-1)	[P_V]^(-1)	
precision: 0.0293
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.0293

29944	'Design_principles_for_network_interconnection__With_the_development_of_individual_computer_networks_comes_the_need_to_interconnect_them._Network_designers_are_faced_with_heterogeneity_of_networks_just_as_they_were_previously_faced_with_heterogeneity_of_computers_within_a_single_network.___This_paper_shows_that_similar_structuring_techniques,_namely_multiplexing,_switching,_cascading,_wrapping_and_layering,_can_be_applied,_and_that_a_set_of_simple_principles_can_be_derived_which_facilitate_greatly_the_design_of_the_interconnection_of_computer_networks.___These_simple_principles_are_applied_to_the_analysis_of_some_typical_examples_of_network_interconnection_problems,_in_the_areas_of_addressing,_routing,_non-equivalent_communication_services,_error_control,_flow_control_and_terminal_access._It_is_suggested_that_similar_principles_could_be_applied_to_some_unresolved_issues_in_computer_network_interconnection,_such_as_congestion_control_or_administrative_functions._It_is_finally_claimed_that_the_final_objective_of_network_interconnection_studies_would_be_to_determine_the_set_of_international_standards_which_are_required_to_make_network_interconnection_straightforward_in_the_near_future._'	candidate size: 12499
29537	'Virtual_terminal_management_in_a_multiple_process_environment__Rochesters_Intelligent_Gateway_provides_its_users_with_the_facilities_for_communicating_simultaneously_with_a_large_number_of_processes_spread_out_among_various_computer_systems._We_have_adopted_the_philosophy_that_the_user_should_be_able_to_manage_any_number_of_concurrent_tasks_or_jobs,_viewing_their_output_on_his_display_device_as_he_desires._To_achieve_this_goal_the_Virtual_Terminal_Management_System_(VTMS)_converts_a_single_physical_terminal_into_multiple__virtual_terminals_,_each_of_which_may_be_written_to_or_queried_for_user_input._VTMS_extends_the_features_of_the_physical_terminal_by_providing_extensive_editing_facilities,_the_capacity_to_maintain_all_output_In_disk-based_data_structures,_and_sophisticated_mechanisms_for_the_management_of_screen_space._Virtual_terminals_are_device-independent;_the_specific_characteristics_of_the_physical_terminal_are_known_only_to_the_lowest-level_I/O_handlers_for_that_device._VTMS_Is_currently_running_on_a_network_of_six_minicomputers_supporting_various_text_and_raster-graphics_displays._'	candidate size: 12499
Time cost for this pair is 160.0100 seconds
[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0077
[P_T]	[P_T]^(-1)	
precision: 0.0022
[P_V]	[P_V]^(-1)	[P_P]	[P_P]^(-1)	
precision: 0.2500

29948	'Delay_related_issues_in_integrated_voice_and_data_transmission:_A_review_and_some_experimental_work__This_paper_focuses_on_network_delays_as_they_apply_to_voice_transmission._First_the_nature_of_the_problem_is_discussed_and_this_is_followed_by_a_review_of_circuit,_packet_and_hybrid_switching._The_concept_of_introducing_delay_to_resolve_contention_in_speech_interpolation_is_also_noted,_and_when_applied_to_both_voice_and_data_messages,_forms_a_basis_for_a_relatively_new_and_so-called_&ldquo;transparent&rdquo;_approach_to_network_design._The_second_part_of_the_paper_deals_with_experimental_work._First,_external_link_considerations_involving_subnet_access_by_frame_synchronous_vocoders_is_discussed,_and_an_experimental_software_interface_is_described_which_exploits_the_60_to_65%_idle_time_in_voice_calls._Secondly,_based_on_the_simulation_of_variable_network_delays,_first_indications_are_that_with_180_ms_&ldquo;hangover&rdquo;,_the_perceptable_threshold_of_variable_delay_is_about_200_ms_average._Finally,_suggestions_for_further_works_on_performance_analysis_and_subjective_testing_are_made._'	candidate size: 12499
27462	'__New_protocols_for_the_data_link_and_network_layer_are_being_proposed_to_address_limitations_of_current_protocols_in_terms_of_scalability,_security,_and_manageability._High-speed_routers_and_switches_that_implement_these_protocols_traditionally_perform_packet_processing_using_ASICs_which_offer_high_speed,_low_chip_area,_and_low_power._But_with_inflexible_custom_hardware,_the_deployment_of_new_protocols_could_happen_only_through_equipment_upgrades._While_newer_routers_use_more_flexible_network_processors_for_data_plane_processing,_due_to_power_and_area_constraints_lookups_in_forwarding_tables_are_done_with_custom_lookup_modules._Thus_most_of_the_proposed_protocols_can_only_be_deployed_with_equipment_upgrades._To_speed_up_the_deployment_of_new_protocols,_we_propose_a_flexible_lookup_module,_PLUG_(Pipelined_Lookup_Grid)._We_can_achieve_generality_without_loosing_efficiency_because_various_custom_lookup_modules_have_the_same_fundamental_features_we_retain:_area_dominated_by_memories,_simple_processing,_and_strict_access_patterns_defined_by_the_data_structure._We_implemented_IPv4,_Ethernet,_Ethane,_and_SEATTLE_in_our_dataflow-based_programming_model_for_the_PLUG_and_mapped_them_to_the_PLUG_hardware_which_consists_of_a_grid_of_tiles._Throughput,_area,_power,_and_latency_of_PLUGs_are_close_to_those_of_specialized_lookup_modules._'	candidate size: 12499
Time cost for this pair is 31.8400 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0293
[P_P]^(-1)	[P_C]	[P_C]^(-1)	
precision: 0.0293
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.0293

31101	'The_chip_complexity_of_binary_arithmetic__The_chip_complexity_of_a_computation_is_concerned_with_the_chip_area,_A,_and_the_time,_T,_required_to_perform_the_computation_when_implemented_on_a_chip._An_area-time_product_AT_&agr;_,for_&agr;_&ge;_0,_is_used_as_a_complexity_measure._A_particular_value_of_&agr;,_which_is_chosen_by_the_user,_reflects_the_relative_importance_between_A_and_T._This_paper_derives_lower_and_upper_bounds_on_the_area-time_complexity_for_chips_that_implement_binary_arithmetic,_assuming_a_model_of_computation_which_is_intended_to_approximate,_current_and_anticipated_LSI_or_VLSI_technology._'	candidate size: 12499
28646	'Optimal_organizations_for_pipelined_hierarchical_memories_In_a_recent_paper_(SPAA01),_we_have_established_that_the_Pipelined_Hierarchical_Random_Access_Machine_(PH-RAM)_is_a_powerful_model_of_computation,_where_most_of_the_memory_latency_can_be_hidden_by_concurrency_of_accesses._In_the_present_work,_we_explore_the_physical_feasibility_of_PH-RAMs.A_pipelined_hierarchical_memory_of_size_$S$_is_characterized_by_two_metrics:_the_access_function_&alpha;(&khgr;),_denoting_the_time_required_by_an_access_to_location_$x$,_and_the_pipeline_period_$p(S)$,_denoting_the_minimum_time_between_subsequent_accesses_that_can_be_sustained._Physical_constraints_on_minimum_device_size_and_maximum_signal_speed_imply_that,_for_a_memory_laid_out_in_$d$_dimensions,_a(&khgr;)=_&OHgr;(&khgr;1/d)$._We_propose_a_novel_memory_organization_scheme_that_can_be_specialized_to_yield_optimal_performance_&alpha;(&khgr;)=O(&khgr;^1/d)$_and_$p(S)=O(1)$,_for_any_$d_\geq_1$.Managing_a_large_number_of_concurrent_load_and_store_instructions_would_pose_a_significant_burden_on_a_traditional_RISC_processor,_requiring_both_a_large_register_file_and_complex_logic_to_properly_synchronize_instructions._We_show_how_these_obstacles_can_be_circumvented_by_introducing_the_Scalable_transPORT_(SPORT)_computer_where_a_simple_processor_drives_a_version_of_our_pipelined_hierarchical_memory_capable_of_servicing_memory-to-memory_instructions._We_show_that_SPORT_provides_a_feasible,_scalable_implementation_of_the_PH-RAM_model.'	candidate size: 12499
Time cost for this pair is 248.0800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0012
[P_A]	[P_A]^(-1)	[P_P]^(-1)	[P_P]^(-1)	
precision: 0.0286

31101	'The_chip_complexity_of_binary_arithmetic__The_chip_complexity_of_a_computation_is_concerned_with_the_chip_area,_A,_and_the_time,_T,_required_to_perform_the_computation_when_implemented_on_a_chip._An_area-time_product_AT_&agr;_,for_&agr;_&ge;_0,_is_used_as_a_complexity_measure._A_particular_value_of_&agr;,_which_is_chosen_by_the_user,_reflects_the_relative_importance_between_A_and_T._This_paper_derives_lower_and_upper_bounds_on_the_area-time_complexity_for_chips_that_implement_binary_arithmetic,_assuming_a_model_of_computation_which_is_intended_to_approximate,_current_and_anticipated_LSI_or_VLSI_technology._'	candidate size: 12499
28646	'Optimal_organizations_for_pipelined_hierarchical_memories_In_a_recent_paper_(SPAA01),_we_have_established_that_the_Pipelined_Hierarchical_Random_Access_Machine_(PH-RAM)_is_a_powerful_model_of_computation,_where_most_of_the_memory_latency_can_be_hidden_by_concurrency_of_accesses._In_the_present_work,_we_explore_the_physical_feasibility_of_PH-RAMs.A_pipelined_hierarchical_memory_of_size_$S$_is_characterized_by_two_metrics:_the_access_function_&alpha;(&khgr;),_denoting_the_time_required_by_an_access_to_location_$x$,_and_the_pipeline_period_$p(S)$,_denoting_the_minimum_time_between_subsequent_accesses_that_can_be_sustained._Physical_constraints_on_minimum_device_size_and_maximum_signal_speed_imply_that,_for_a_memory_laid_out_in_$d$_dimensions,_a(&khgr;)=_&OHgr;(&khgr;1/d)$._We_propose_a_novel_memory_organization_scheme_that_can_be_specialized_to_yield_optimal_performance_&alpha;(&khgr;)=O(&khgr;^1/d)$_and_$p(S)=O(1)$,_for_any_$d_\geq_1$.Managing_a_large_number_of_concurrent_load_and_store_instructions_would_pose_a_significant_burden_on_a_traditional_RISC_processor,_requiring_both_a_large_register_file_and_complex_logic_to_properly_synchronize_instructions._We_show_how_these_obstacles_can_be_circumvented_by_introducing_the_Scalable_transPORT_(SPORT)_computer_where_a_simple_processor_drives_a_version_of_our_pipelined_hierarchical_memory_capable_of_servicing_memory-to-memory_instructions._We_show_that_SPORT_provides_a_feasible,_scalable_implementation_of_the_PH-RAM_model.'	candidate size: 12499
Time cost for this pair is 248.4100 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.0010
[P_P]	[P_P]	[P_A]	[P_A]^(-1)	
precision: 0.0417

31101	'The_chip_complexity_of_binary_arithmetic__The_chip_complexity_of_a_computation_is_concerned_with_the_chip_area,_A,_and_the_time,_T,_required_to_perform_the_computation_when_implemented_on_a_chip._An_area-time_product_AT_&agr;_,for_&agr;_&ge;_0,_is_used_as_a_complexity_measure._A_particular_value_of_&agr;,_which_is_chosen_by_the_user,_reflects_the_relative_importance_between_A_and_T._This_paper_derives_lower_and_upper_bounds_on_the_area-time_complexity_for_chips_that_implement_binary_arithmetic,_assuming_a_model_of_computation_which_is_intended_to_approximate,_current_and_anticipated_LSI_or_VLSI_technology._'	candidate size: 12499
28646	'Optimal_organizations_for_pipelined_hierarchical_memories_In_a_recent_paper_(SPAA01),_we_have_established_that_the_Pipelined_Hierarchical_Random_Access_Machine_(PH-RAM)_is_a_powerful_model_of_computation,_where_most_of_the_memory_latency_can_be_hidden_by_concurrency_of_accesses._In_the_present_work,_we_explore_the_physical_feasibility_of_PH-RAMs.A_pipelined_hierarchical_memory_of_size_$S$_is_characterized_by_two_metrics:_the_access_function_&alpha;(&khgr;),_denoting_the_time_required_by_an_access_to_location_$x$,_and_the_pipeline_period_$p(S)$,_denoting_the_minimum_time_between_subsequent_accesses_that_can_be_sustained._Physical_constraints_on_minimum_device_size_and_maximum_signal_speed_imply_that,_for_a_memory_laid_out_in_$d$_dimensions,_a(&khgr;)=_&OHgr;(&khgr;1/d)$._We_propose_a_novel_memory_organization_scheme_that_can_be_specialized_to_yield_optimal_performance_&alpha;(&khgr;)=O(&khgr;^1/d)$_and_$p(S)=O(1)$,_for_any_$d_\geq_1$.Managing_a_large_number_of_concurrent_load_and_store_instructions_would_pose_a_significant_burden_on_a_traditional_RISC_processor,_requiring_both_a_large_register_file_and_complex_logic_to_properly_synchronize_instructions._We_show_how_these_obstacles_can_be_circumvented_by_introducing_the_Scalable_transPORT_(SPORT)_computer_where_a_simple_processor_drives_a_version_of_our_pipelined_hierarchical_memory_capable_of_servicing_memory-to-memory_instructions._We_show_that_SPORT_provides_a_feasible,_scalable_implementation_of_the_PH-RAM_model.'	candidate size: 12499
Time cost for this pair is 247.8800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.0010
[P_P]	[P_P]	[P_A]	[P_A]^(-1)	
precision: 0.0417

29322	'A_simple_three-dimensional_real-time_cellular_array__We_build_a_three-dimensional_array_of_unreliable_cellular_automata_that_can_simulate_a_universal_Turing_machine_(more_generally,_a_one-dimensional_universal_iterative_array)_reliably._This_is_the_first_reliable_real-time_simulation._The_encoding_is_simple_repetition,_and_no_decoding_is_needed._The_construction_is_based_on_Tooms_work._'	candidate size: 12499
25538	'HAT:_a_hardware_assisted_TOP-DOC_inverted_index_component_A_novel_Hardware_Assisted_Top-Doc_(HAT)_component_is_disclosed._HAT_is_an_optimized_content_indexing_device_based_on_a_modified_inverted_index_structure._HAT_accommodates_patterns_of_different_lengths_and_supports_a_varied_posting_list_versus_term_count_feature_sustaining_high_reusability_and_efficiency._The_developed_component_can_be_used_either_as_an_internal_slave_component_or_as_an_external_co-processor_and_is_efficient_in_resource_demands_as_the_component_controllers_take_only_a_minimal_percentage_of_the_target_device_space_leaving_the_majority_of_the_space_to_term_and_posting_entries._A_Very_High_Speed_Integrated_Circuit_(VHSIC)_Hardware_Description_Language_(VHDL)_is_used_to_model_the_HAT_system.'	candidate size: 12499
Time cost for this pair is 519.5500 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

29322	'A_simple_three-dimensional_real-time_cellular_array__We_build_a_three-dimensional_array_of_unreliable_cellular_automata_that_can_simulate_a_universal_Turing_machine_(more_generally,_a_one-dimensional_universal_iterative_array)_reliably._This_is_the_first_reliable_real-time_simulation._The_encoding_is_simple_repetition,_and_no_decoding_is_needed._The_construction_is_based_on_Tooms_work._'	candidate size: 12499
28427	'New_bounds_for_parallel_prefix_circuits__In_this_paper,_new_upper_and_lower_bounds_are_obtained_for_the_number_of_gates_in_parallel_prefix_circuits_with_minimum_depth_when_the_number_of_inputs_is_a_power_of_two._In_addition,_structural_information_concerning_these_circuits_is_described._Parallel_prefix_circuits_with_bounds_imposed_on_the_fan-out_of_the_gates_are_also_considered._In_both_cases,_the_upper_and_lower_bounds_obtained_differ_by_small_constant_factors._'	candidate size: 12499
Time cost for this pair is 32.7400 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0012
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_C]	[P_C]^(-1)	[P_P]	
precision: 0.0010

29322	'A_simple_three-dimensional_real-time_cellular_array__We_build_a_three-dimensional_array_of_unreliable_cellular_automata_that_can_simulate_a_universal_Turing_machine_(more_generally,_a_one-dimensional_universal_iterative_array)_reliably._This_is_the_first_reliable_real-time_simulation._The_encoding_is_simple_repetition,_and_no_decoding_is_needed._The_construction_is_based_on_Tooms_work._'	candidate size: 12499
25538	'HAT:_a_hardware_assisted_TOP-DOC_inverted_index_component_A_novel_Hardware_Assisted_Top-Doc_(HAT)_component_is_disclosed._HAT_is_an_optimized_content_indexing_device_based_on_a_modified_inverted_index_structure._HAT_accommodates_patterns_of_different_lengths_and_supports_a_varied_posting_list_versus_term_count_feature_sustaining_high_reusability_and_efficiency._The_developed_component_can_be_used_either_as_an_internal_slave_component_or_as_an_external_co-processor_and_is_efficient_in_resource_demands_as_the_component_controllers_take_only_a_minimal_percentage_of_the_target_device_space_leaving_the_majority_of_the_space_to_term_and_posting_entries._A_Very_High_Speed_Integrated_Circuit_(VHSIC)_Hardware_Description_Language_(VHDL)_is_used_to_model_the_HAT_system.'	candidate size: 12499
Time cost for this pair is 518.8000 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0002
[P_T]	[P_T]^(-1)	[P_P]^(-1)	[P_P]^(-1)	
precision: 0.0002

28651	'_AT_2_L_2_o_N_2_/2_for_fast_fourier_transform_in_multilayer_VLSI_In_this_paper,_we_show_that__N_-point_fast_Fourier_transform_(FFT)_circuits_with_throughput_1_(i.e.,_time_1_after_pipelining)_can_be_optimally_laid_out_with_area__N__2_/(4&lfloor;__L__2_/2_&rfloor;)_+__o_(_N__2_/_L__2_)_under_the_multilayer_2-D_grid_model,_where_only_one_active_layer_(for_network_nodes)_is_required_and__L__layers_of_wires_are_available,_2_&lte;__L__&lte;__o_(*sqrt;[3]_N_)._We_further_propose_AT_2__L__2__or_2__AT__2__&lfloor;__L__2_/2_&rfloor;_as_a_new_parameter_for_characterizing_the_area-time_complexity_for_multilayer_VLSI,_and_show_that__AT__2__L__2__&omicron;__N__2_/2_for__N_-point_Fourier_transform.'	candidate size: 12499
28678	'How_to_assemble_tree_machines_(Extended_Abstract)__Many_researchers_have_proposed_that_ensembles_of_processing_elements_be_organized_as_trees._This_paper_explores_how_large_tree_machines_may_be_assembled_efficiently_from_smaller_components._A_principal_constraint_that_we_consider_is_the_limited_number_of_external_connections_from_an_integrated_circuit_chip._We_also_explore_the_emerging_capability_of_restructurable_VLSI_which_allows_a_chip_to_be_customized_after_fabrication.___We_give_a_linear-area_chip_of__m__processors_and_only_four_off-chip_connections_which_can_be_used_as_the_sole_building_block_to_construct_an_arbitrarily_large_complete_binary_tree._We_also_present_a_restructurable_linear-area_layout_of__m__processors_with__O_(lg__m_)_pins_that_can_realize_an_arbitrary_binary_tree._This_layout_is_based_on_a_solution_to_the_graph-theoretic_problem:_Given_a_tree_in_which_each_vertex_is_either_black_or_white,_determine_how_many_edges_need_be_cut_in_order_to_bisect_the_tree_into_equal-size_components,_each_containing_exactly_half_the_black_and_half_the_white_vertices._'	candidate size: 12499
Time cost for this pair is 43.0000 seconds
[P_P]	[P_P]	[P_P]^(-1)	
precision: 0.3000
[P_P]^(-1)	[P_P]	[P_P]^(-1)	
precision: 0.3000
[P_T]	[P_T]^(-1)	
precision: 0.0013

29296	'Algorithms_for_routing_and_testing_routability_of_planar_VLSI_layouts__This_paper_studies_the_problem_of_routing_wires_in_a_grid_among_features_on_one_layer_of_a_VLSI_chip,_when_a__sketch__of_the_layer_is_given._A_sketch_specifies_the_positions_of_features_and_the_topology_of_the_interconnecting_wires._We_give_polynomial-time_algorithms_that_(1)_determine_the_routability_of_a_sketch,_and_(2)_produce_a_routing_of_a_sketch_that_optimizes_both_individual_and_total_wire_length._These_algorithms_subsume_most_of_the_polynomial-time_algorithms_in_the_literature_for_planar_routing_and_routability_testing_in_the_rectilinear_grid_model._We_also_provide_an_explicit_construction_of_a_database,_called_the__rubber-band_equivalent_,_to_support_computation_involving_the_layout_topology._'	candidate size: 12499
28678	'How_to_assemble_tree_machines_(Extended_Abstract)__Many_researchers_have_proposed_that_ensembles_of_processing_elements_be_organized_as_trees._This_paper_explores_how_large_tree_machines_may_be_assembled_efficiently_from_smaller_components._A_principal_constraint_that_we_consider_is_the_limited_number_of_external_connections_from_an_integrated_circuit_chip._We_also_explore_the_emerging_capability_of_restructurable_VLSI_which_allows_a_chip_to_be_customized_after_fabrication.___We_give_a_linear-area_chip_of__m__processors_and_only_four_off-chip_connections_which_can_be_used_as_the_sole_building_block_to_construct_an_arbitrarily_large_complete_binary_tree._We_also_present_a_restructurable_linear-area_layout_of__m__processors_with__O_(lg__m_)_pins_that_can_realize_an_arbitrary_binary_tree._This_layout_is_based_on_a_solution_to_the_graph-theoretic_problem:_Given_a_tree_in_which_each_vertex_is_either_black_or_white,_determine_how_many_edges_need_be_cut_in_order_to_bisect_the_tree_into_equal-size_components,_each_containing_exactly_half_the_black_and_half_the_white_vertices._'	candidate size: 12499
Time cost for this pair is 56.1400 seconds
[P_A]	[P_A]^(-1)	
precision: 0.2222
[P_C]	[P_C]^(-1)	
precision: 0.0062
[P_T]	[P_T]^(-1)	
precision: 0.0013

30484	'A_model_of_computation_for_VLSI_with_related_complexity_results____We_propose_a_new_model_of_computation_for_VLSI_which_is_a_refinement_of_previous_models_and_makes_the_additional_assumption_that_the_time_for_propagating_information_is_linear_in_the_distance._Our_approach_is_motivated_by_the_failure_of_previous_models_to_allow_for_realistic_asymptotic_analysis._While_accommodating_for_basic_laws_of_physics,_this_model_tries_to_be_most_general_and_technology-independent._Thus,_from_a_complexity_viewpoint,_it_is_especially_suited_for_deriving_lower_bounds_and_trade-offs._We_present_new_results_for_a_number_of_problems_including_fan-in,_addition,_transitive_functions,_matrix_multiplication,_and_sorting.___'	candidate size: 12499
28384	'VLSI_layout_of_trees_into_grids_of_minimum_width_In_this_paper_we_consider_the_VLSI_layout_(i.e.,_Manhattan_layout)_of_graphs_into_grids_with_minimum__width__(i.e.,_the_length_of_the_shorter_side_of_a_grid)as_well_as_with_minimum_area._The_layouts_into_minimum_area_and_minimum_width_are_equivalent_to_those_with_the_largest_possible_aspect_ratio_of_a_minimum_area_layout._Thus_such_a_layout_has_merits_that,_by_"folding"_the_layout,_a_layout_of__all_possible__aspect_ratio_can_be_obtained_with_increase_of_area_within_a_small_constant_factor._We_show_that_an__N_-vertex_tree_with__layout-width__(i.e.,_the_minimum_width_of_a_grid_into_which_the_tree_can_be_laid_out)__k__can_be_laid_out_into_a_grid_of_area__O(N)__and_width__O(k)_._For_binary_tree_layouts,_we_give_a_detailed_trade-off_between_area_and_width:_an__N_-vertex_binary_tree_with_layout-width__k__can_be_laid_out_into_area__O(k+&#945;/1+&#945;N)__and_width__k+&#945;_,_where__&#945;__is_an_arbitrary_integer_with__0&#8804;_&#945;&#8804;&#8730;N_,_and_the_area_is_existentially_optimal_for_any__k&#8805;_1__and__&#945;&#8805;_0_._This_implies_that__&#945;=&#969;(k)__is_essential_for_a_layout_of_a_graph_into_optimal_area._The_layouts_proposed_here_can_be_constructed_in_polynomial_time._We_also_show_that_the_problem_of_laying_out_a_given_graph__G__into_given_area_and_width,_or_equivalently,_into_given_length_and_width_is_NP-hard_even_if__G__is_restricted_to_a_binary_tree.'	candidate size: 12499
Time cost for this pair is 201.8900 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0013
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0013
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0013

28406	'The_complexity_of_verifying_memory_coherence_The_general_problem_of_verifying_coherence_for_shared-memory_multiprocessor_executions_is_NP-Complete._Verifying_memory_consistency_models_is_therefore_NP-Hard,_because_memory_consistency_models_require_coherence_for_some_or_all_operations._However,_verifying_memory_consistency_remains_NP-Complete_for_executions_known_to_be_coherent.'	candidate size: 12499
24779	'Brief_announcement:_flashcrowding_in_tiled_multiprocessors_under_thermal_constraints__This_work_argues_that,_in_the_face_of_growing_thermal_constraints,_under_an_increasing_number_of_scenarios_the_most_effective_tiled_processor_design_is_one_that_can_support_efficient_flashcrowding:_in_a_nutshell,_placing_on_a_chip_far_more_computational_power_than_it_can_sustain_for_extended_periods_of_time,_and_concentrating_computation_into_a_few_transient_hotspots._'	candidate size: 12499
Time cost for this pair is 34.3800 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0106
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.0106
[P_C]	[V_C]^(-1)	[P_V]^(-1)	
precision: 0.0106

27357	'Wireless_downlink_data_channels:_user_performance_and_cell_dimensioning_We_consider_wireless_downlink_data_channels_where_the_transmission_power_of_each_base_station_is_time-shared_between_a_dynamic_number_of_active_users_as_in_CDMA/HDR_systems._We_derive_analytical_results_relating_user_performance,_in_terms_of_blocking_probability_and_data_throughput,_to_cell_size_and_traffic_density._These_results_are_used_to_address_a_number_of_practically_interesting_issues,_including_the_trade-off_between_cell_coverage_and_cell_capacity_and_the_choice_of_efficient_scheduling_and_admission_control_schemes.'	candidate size: 12499
28659	'Universal_stability_of_undirected_graphs_in_the_adversarial_queueing_model_In_this_paper_we_study_the_universal_stability_of_undirected_graphs_in_the_adversarial_queueing_model_for_packet_routing._In_this_setting,_packets_must_be_injected_in_some_edge_and_have_to_traverse_a_path_before_leaving_the_system._Restrictions_on_the_allowed_types_of_path_that_packets_must_traverse_provide_different_packet_models._We_consider_three_natural_models,_and_provide_polynomial_time_algorithms_for_testing_universal_stability_on_them._In_the_three_cases,_we_obtain_a_different_characterization,_in_terms_of_forbidden_subgraphs,_thus_showing_that_slight_variations_lead_to_non-equivalent_models.We_extend_those_results_to_show_that_universal_stability_of_digraphs,_in_the_case_in_which_packets_follow_directed_paths_without_repeating_vertices,_can_be_decided_in_polynomial_time.All_the_instability_results_are_obtained_for_the_\NTGLIS_protocol._Therefore,_the_property_of_universal_stability_is_equivalent_to_\NTGLIS-stability,_in_all_the_cases.'	candidate size: 12499
Time cost for this pair is 208.5500 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0005
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0005
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0005

24779	'Brief_announcement:_flashcrowding_in_tiled_multiprocessors_under_thermal_constraints__This_work_argues_that,_in_the_face_of_growing_thermal_constraints,_under_an_increasing_number_of_scenarios_the_most_effective_tiled_processor_design_is_one_that_can_support_efficient_flashcrowding:_in_a_nutshell,_placing_on_a_chip_far_more_computational_power_than_it_can_sustain_for_extended_periods_of_time,_and_concentrating_computation_into_a_few_transient_hotspots._'	candidate size: 12499
28659	'Universal_stability_of_undirected_graphs_in_the_adversarial_queueing_model_In_this_paper_we_study_the_universal_stability_of_undirected_graphs_in_the_adversarial_queueing_model_for_packet_routing._In_this_setting,_packets_must_be_injected_in_some_edge_and_have_to_traverse_a_path_before_leaving_the_system._Restrictions_on_the_allowed_types_of_path_that_packets_must_traverse_provide_different_packet_models._We_consider_three_natural_models,_and_provide_polynomial_time_algorithms_for_testing_universal_stability_on_them._In_the_three_cases,_we_obtain_a_different_characterization,_in_terms_of_forbidden_subgraphs,_thus_showing_that_slight_variations_lead_to_non-equivalent_models.We_extend_those_results_to_show_that_universal_stability_of_digraphs,_in_the_case_in_which_packets_follow_directed_paths_without_repeating_vertices,_can_be_decided_in_polynomial_time.All_the_instability_results_are_obtained_for_the_\NTGLIS_protocol._Therefore,_the_property_of_universal_stability_is_equivalent_to_\NTGLIS-stability,_in_all_the_cases.'	candidate size: 12499
Time cost for this pair is 32.2700 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0106
[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0077
[P_C]	[P_C]^(-1)	[P_P]	
precision: 0.0050

31741	'__Power_management_has_become_increasingly_necessary_in_large-scale_datacenters_to_address_costs_and_limitations_in_cooling_or_power_delivery._This_paper_explores_how_to_integrate_power_management_mechanisms_and_policies_with_the_virtualization_technologies_being_actively_deployed_in_these_environments._The_goals_of_the_proposed__VirtualPower__approach_to_online_power_management_are_(i)_to_support_the_isolated_and_independent_operation_assumed_by_guest_virtual_machines_(VMs)_running_on_virtualized_platforms_and_(ii)_to_make_it_possible_to_control_and_globally_coordinate_the_effects_of_the_diverse_power_management_policies_applied_by_these_VMs_to_virtualized_resources._To_attain_these_goals,_VirtualPower_extends_to_guest_VMs_`soft_versions_of_the_hardware_power_states_for_which_their_policies_are_designed._The_resulting_technical_challenge_is_to_appropriately_map_VM-level_updates_made_to_soft_power_states_to_actual_changes_in_the_states_or_in_the_allocation_of_underlying_virtualized_hardware._An_implementation_of_VirtualPower_Management_(VPM)_for_the_Xen_hypervisor_addresses_this_challenge_by_provision_of_multiple_system-level_abstractions_including_VPM_states,_channels,_mechanisms,_and_rules._Experimental_evaluations_on_modern_multicore_platforms_highlight_resulting_improvements_in_online_power_management_capabilities,_including_minimization_of_power_consumption_with_little_or_no_performance_penalties_and_the_ability_to_throttle_power_consumption_while_still_meeting_application_requirements._Finally,_coordination_of_online_methods_for_server_consolidation_with_VPM_management_techniques_in_heterogeneous_server_systems_is_shown_to_provide_up_to_34%_improvements_in_power_consumption._'	candidate size: 12499
26971	'Dynamic_plan_generation_for_parameterized_queries__Query_processing_in_a_DBMS_typically_involves_two_distinct_phases:_compilation,_which_generates_the_best_plan_and_its_corresponding_execution_steps,_and_execution,_which_evaluates_these_steps_against_database_objects._For_some_queries,_considerable_resource_savings_can_be_achieved_by_skipping_the_compilation_phase_when_the_same_query_was_previously_submitted_and_its_plan_was_already_cached._In_a_number_of_important_applications_the_same_query,_called_a_Parameterized_Query_(PQ),_is_repeatedly_submitted_in_the_same_basic_form_but_with_different_parameter_values._PQs_are_extensively_used_in_both_data_update_(e.g._batch_update_programs)_and_data_access_queries._There_are_tradeoffs_associated_with_caching_and_re-using_query_plans_such_as_space_utilization_and_maintenance_cost._Besides,_pre-compiled_plans_may_be_suboptimal_for_a_particular_execution_due_to_various_reasons_including_data_skew_and_inability_to_exploit_value-based_query_transformation_like_materialized_view_rewrite_and_unsatisfiable_predicate_elimination._We_address_these_tradeoffs_by_distinguishing_two_types_of_plans_for_PQs:_generic_and_specific_plans._Generic_plans_are_pre-compiled_plans_that_are_independent_of_the_actual_parameter_values._Prior_to_execution,_parameter_values_are_plugged_in_to_generic_plans._In_specific_plans,_parameter_values_are_plugged_prior_to_the_compilation_phase._This_paper_provides_a_practical_framework_for_dynamically_deciding_between_specific_and_generic_plans_for_PQs_based_on_a_mix_of_rule_and_cost_based_heuristics_which_are_implemented_in_the_Teradata_12.0_DBMS._'	candidate size: 12499
Time cost for this pair is 174.6600 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0003
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0003

31741	'__Power_management_has_become_increasingly_necessary_in_large-scale_datacenters_to_address_costs_and_limitations_in_cooling_or_power_delivery._This_paper_explores_how_to_integrate_power_management_mechanisms_and_policies_with_the_virtualization_technologies_being_actively_deployed_in_these_environments._The_goals_of_the_proposed__VirtualPower__approach_to_online_power_management_are_(i)_to_support_the_isolated_and_independent_operation_assumed_by_guest_virtual_machines_(VMs)_running_on_virtualized_platforms_and_(ii)_to_make_it_possible_to_control_and_globally_coordinate_the_effects_of_the_diverse_power_management_policies_applied_by_these_VMs_to_virtualized_resources._To_attain_these_goals,_VirtualPower_extends_to_guest_VMs_`soft_versions_of_the_hardware_power_states_for_which_their_policies_are_designed._The_resulting_technical_challenge_is_to_appropriately_map_VM-level_updates_made_to_soft_power_states_to_actual_changes_in_the_states_or_in_the_allocation_of_underlying_virtualized_hardware._An_implementation_of_VirtualPower_Management_(VPM)_for_the_Xen_hypervisor_addresses_this_challenge_by_provision_of_multiple_system-level_abstractions_including_VPM_states,_channels,_mechanisms,_and_rules._Experimental_evaluations_on_modern_multicore_platforms_highlight_resulting_improvements_in_online_power_management_capabilities,_including_minimization_of_power_consumption_with_little_or_no_performance_penalties_and_the_ability_to_throttle_power_consumption_while_still_meeting_application_requirements._Finally,_coordination_of_online_methods_for_server_consolidation_with_VPM_management_techniques_in_heterogeneous_server_systems_is_shown_to_provide_up_to_34%_improvements_in_power_consumption._'	candidate size: 12499
26971	'Dynamic_plan_generation_for_parameterized_queries__Query_processing_in_a_DBMS_typically_involves_two_distinct_phases:_compilation,_which_generates_the_best_plan_and_its_corresponding_execution_steps,_and_execution,_which_evaluates_these_steps_against_database_objects._For_some_queries,_considerable_resource_savings_can_be_achieved_by_skipping_the_compilation_phase_when_the_same_query_was_previously_submitted_and_its_plan_was_already_cached._In_a_number_of_important_applications_the_same_query,_called_a_Parameterized_Query_(PQ),_is_repeatedly_submitted_in_the_same_basic_form_but_with_different_parameter_values._PQs_are_extensively_used_in_both_data_update_(e.g._batch_update_programs)_and_data_access_queries._There_are_tradeoffs_associated_with_caching_and_re-using_query_plans_such_as_space_utilization_and_maintenance_cost._Besides,_pre-compiled_plans_may_be_suboptimal_for_a_particular_execution_due_to_various_reasons_including_data_skew_and_inability_to_exploit_value-based_query_transformation_like_materialized_view_rewrite_and_unsatisfiable_predicate_elimination._We_address_these_tradeoffs_by_distinguishing_two_types_of_plans_for_PQs:_generic_and_specific_plans._Generic_plans_are_pre-compiled_plans_that_are_independent_of_the_actual_parameter_values._Prior_to_execution,_parameter_values_are_plugged_in_to_generic_plans._In_specific_plans,_parameter_values_are_plugged_prior_to_the_compilation_phase._This_paper_provides_a_practical_framework_for_dynamically_deciding_between_specific_and_generic_plans_for_PQs_based_on_a_mix_of_rule_and_cost_based_heuristics_which_are_implemented_in_the_Teradata_12.0_DBMS._'	candidate size: 12499
Time cost for this pair is 174.9200 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0003

29156	'__Experience_with_the_design_and_implementation_of_a_number_of_computer_systems,_and_study_of_many_other_systems,_has_led_to_some_general_hints_for_system_design_which_are_described_here._They_are_illustrated_by_a_number_of_examples,_ranging_from_hardware_such_as_the_Alto_and_the_Dorado_to_applications_programs_such_as_Bravo_and_Star._'	candidate size: 12499
26971	'Dynamic_plan_generation_for_parameterized_queries__Query_processing_in_a_DBMS_typically_involves_two_distinct_phases:_compilation,_which_generates_the_best_plan_and_its_corresponding_execution_steps,_and_execution,_which_evaluates_these_steps_against_database_objects._For_some_queries,_considerable_resource_savings_can_be_achieved_by_skipping_the_compilation_phase_when_the_same_query_was_previously_submitted_and_its_plan_was_already_cached._In_a_number_of_important_applications_the_same_query,_called_a_Parameterized_Query_(PQ),_is_repeatedly_submitted_in_the_same_basic_form_but_with_different_parameter_values._PQs_are_extensively_used_in_both_data_update_(e.g._batch_update_programs)_and_data_access_queries._There_are_tradeoffs_associated_with_caching_and_re-using_query_plans_such_as_space_utilization_and_maintenance_cost._Besides,_pre-compiled_plans_may_be_suboptimal_for_a_particular_execution_due_to_various_reasons_including_data_skew_and_inability_to_exploit_value-based_query_transformation_like_materialized_view_rewrite_and_unsatisfiable_predicate_elimination._We_address_these_tradeoffs_by_distinguishing_two_types_of_plans_for_PQs:_generic_and_specific_plans._Generic_plans_are_pre-compiled_plans_that_are_independent_of_the_actual_parameter_values._Prior_to_execution,_parameter_values_are_plugged_in_to_generic_plans._In_specific_plans,_parameter_values_are_plugged_prior_to_the_compilation_phase._This_paper_provides_a_practical_framework_for_dynamically_deciding_between_specific_and_generic_plans_for_PQs_based_on_a_mix_of_rule_and_cost_based_heuristics_which_are_implemented_in_the_Teradata_12.0_DBMS._'	candidate size: 12499
Time cost for this pair is 166.2500 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0003

28884	'Using_SIMD_registers_and_instructions_to_enable_instruction-level_parallelism_in_sorting_algorithms__Most_contemporary_processors_offer_some_version_of_Single_Instruction_Multiple_Data_(SIMD)_machinery_-_vector_registers_and_instructions_to_manipulate_data_stored_in_such_registers._The_central_idea_of_this_paper_is_to_use_these_SIMD_resources_to_improve_the_performance_of_the_tail_of_recursive_sorting_algorithms._When_the_number_of_elements_to_be_sorted_reaches_a_set_threshold,_data_is_loaded_into_the_vector_registers,_manipulated_in-register,_and_the_result_stored_back_to_memory._Three_implementations_of_sorting_with_two_different_SIMD_machineries_-_x86-64s_SSE2_and_G5s_AltiVec_-_demonstrate_that_this_idea_delivers_significant_speed_improvements._The_improvements_provided_are_orthogonal_to_the_gains_obtained_through_empirical_search_for_a_suitable_sorting_algorithm_[11]._When_integrated_with_the_Dynamically_Tuned_Sorting_Library_(DTSL)_this_new_code_generation_strategy_reduces_the_time_spent_by_DTSL_up_to_22%_for_moderately-sized_arrays,_with_greater_relative_reductions_for_small_arrays._Wall-clock_performance_of__d_-heaps_is_improved_by_up_to_39%_using_a_similar_technique._'	candidate size: 12499
21733	'A_scalable_micro_wireless_interconnect_structure_for_CMPs__This_paper_describes_an_unconventional_way_to_apply_wireless_networking_in_emerging_technologies._It_makes_the_case_for_using_a_two-tier_hybrid_wireless/wired_architecture_to_interconnect_hundreds_to_thousands_of_cores_in_chip_multiprocessors_(CMPs),_where_current_interconnect_technologies_face_severe_scaling_limitations_in_excessive_latency,_long_wiring,_and_complex_layout._We_propose_a_recursive_wireless_interconnect_structure_called_the_WCube_that_features_a_single_transmit_antenna_and_multiple_receive_antennas_at_each_micro_wireless_router_and_offers_scalable_performance_in_terms_of_latency_and_connectivity._We_show_the_feasibility_to_build_miniature_on-chip_antennas,_and_simple_transmitters_and_receivers_that_operate_at_100-500_GHz_sub-terahertz_frequency_bands._We_also_devise_new_two-tier_wormhole_based_routing_algorithms_that_are_deadlock_free_and_ensure_a_minimum-latency_route_on_a_1000-core_on-chip_interconnect_network._Our_simulations_show_that_our_protocol_suite_can_reduce_the_observed_latency_by_20%_to_45%,_and_consumes_power_that_is_comparable_to_or_less_than_current_2-D_wired_mesh_designs._'	candidate size: 12499
Time cost for this pair is 107.8700 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0029
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0029
[P_A]	[P_A]^(-1)	[P_C]	[P_C]^(-1)	
precision: 0.0030

29893	'A_model_for_multi-grained_parallelism_(extended_abstract)__Multi-grained_parallel_computers_can_be_very_effective_on_computationally_intensive_problems_that_have_important_serial_and_parallel_components._We_introduce_the_Mesh_SuperHet,_a_model_of_this_type_consisting_of_the_close_coupling_of_a__d_-dimensional_toroidal_mesh_of_coarse-grained_processors_to_a_serial_machine_consisting_of_memory_modules_connected_via_a_low-diameter_network_to_a_serial_processor._We_exhibit_problems_for_which_the_Mesh_SuperHet_is_superior_to_its_serial_or_parallel_components_alone_and_develop_tight_performance_bounds_for_sorting,_the_fast_Fourier_transform,_and_matrix_multiplication._As_multi-grained_machines_become_more_common,_studies_such_as_this_will_both_reveal_the_fundamental_limitations_on_such_architectures_and_set_the_context_for_algorithm_development._'	candidate size: 12499
29758	'Efficient_orchestration_of_sub-word_parallelism_in_media_processors_Communication_and_multimedia_applications_with_increased_data_rates_and_enhanced_functionality_continuously_raise_the_bar_for_the_computational_requirements_of_future_microprocessors._In_order_to_meet_these_computational_demands_it_is_necessary_to_exploit_sub-word_parallelism_efficiently._We_propose_to_make_sub-word_data_movement_a_first-class_operation_in_microprocessor_architectures_by_introducing_a_Sub-word_Permutation_Unit_(SPU)in_the_execution_pipeline._The_SPU_is_evaluated_in_the_context_of_the_MMX_media_co-processor_for_the_Intel_Pentium_architectures,_but_our_results_can_be_extended_to_any_processor_that_supports_sub-word_parallelism._We_find_that_the_SPU_all_ws_us_to_orchestrate_sub-word_data_placement_prior_to_computation,_thus_all_wing_the_MMX_functional_units_to_concentrate_on_performing_calculations._Furthermore,_we_introduce_a_decoupled_SPU_control_mechanism_at_the_basic_block_level_which_allows_static_optimization_to_eliminate_data-movement_verhead_in_tight_loops,_where_most_media_and_signal_processing_occurs._We_demonstrated_that_anywhere_from_4%_to_20%_improvement_can_be_obtained_on_key_media_and_signal_processing_kernels_with_as_little_as_1%_increase_in_hardware_resources.'	candidate size: 12499
Time cost for this pair is 27.4300 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0317
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.0317
[P_C]	[V_C]^(-1)	[P_V]^(-1)	
precision: 0.0317

28482	'__The_development_of_microprocessors_has_suggested_the_design_of_distributed_processing_and_multiprocessing_computer_architectures._A_computer_system_design_incorporating_these_ideas_is_proposed,_along_with_its_impact_on_memory_management_and_process_control_aspects_of_the_systems_operating_system._The_key_design_feature_is_to_identify_system_processes_with_microprocessors_and_interconnect_them_in_a_hierarchy_constructed_to_minimize_intercommunication_requirements._'	candidate size: 12499
23709	'__The_ability_to_approximately_answer_aggregation_queries_accurately_and_efficiently_is_of_great_benefit_for_decision_support_and_data_mining_tools._In_contrast_to_previous_sampling-based_studies,_we_treat_the_problem_as_an__optimization__problem_whose_goal_is_to_minimize_the_error_in_answering_queries_in_the_given_workload._A_key_novelty_of_our_approach_is_that_we_can_tailor_the_choice_of_samples_to_be_robust_even_for_workloads_that_are_&ldquo;similar&rdquo;_but_not_necessarily_identical_to_the_given_workload._Finally,_our_techniques_recognize_the_importance_of_taking_into_account_the_variance_in_the_data_distribution_in_a_principled_manner._We_show_how_our_solution_can_be_implemented_on_a_database_system,_and_present_results_of_extensive_experiments_on_Microsoft_SQL_Server_2000_that_demonstrate_the_superior_quality_of_our_method_compared_to_previous_work._'	candidate size: 12499
Time cost for this pair is 112.4300 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0029
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0029
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0029

21391	'TrustGuard:_countering_vulnerabilities_in_reputation_management_for_decentralized_overlay_networks_Reputation_systems_have_been_popular_in_estimating_the_trustworthiness_and_predicting_the_future_behavior_of_nodes_in_a_large-scale_distributed_system_where_nodes_may_transact_with_one_another_without_prior_knowledge_or_experience._One_of_the_fundamental_challenges_in_distributed_reputation_management_is_to_understand_vulnerabilities_and_develop_mechanisms_that_can_minimize_the_potential_damages_to_a_system_by_malicious_nodes._In_this_paper,_we_identify_three_vulnerabilities_that_are_detrimental_to_decentralized_reputation_management_and_propose_TrustGuard_-_a__safeguard__framework_for_providing_a_highly_dependable_and_yet_efficient_reputation_system._First,_we_provide_a_dependable_trust_model_and_a_set_of_formal_methods_to_handle_strategic_malicious_nodes_that_continuously_change_their_behavior_to_gain_unfair_advantages_in_the_system._Second,_a_transaction_based_reputation_system_must_cope_with_the_vulnerability_that_malicious_nodes_may_misuse_the_system_by_flooding_feedbacks_with_fake_transactions._Third,_but_not_least,_we_identify_the_importance_of_filtering_out_dishonest_feedbacks_when_computing_reputation-based_trust_of_a_node,_including_the_feedbacks_filed_by_malicious_nodes_through_collusion._Our_experiments_show_that,_comparing_with_existing_reputation_systems,_our_framework_is_highly_dependable_and_effective_in_countering_malicious_nodes_regarding_strategic_oscillating_behavior,_flooding_malevolent_feedbacks_with_fake_transactions,_and_dishonest_feedbacks.'	candidate size: 12499
20464	'MAP:_medial_axis_based_geometric_routing_in_sensor_networks_One_of_the_challenging_tasks_in_the_deployment_of_dense_wireless_networks_(like_sensor_networks)_is_in_devising_a_routing_scheme_for_node_to_node_communication._Important_consideration_includes_scalability,_routing_complexity,_the_length_of_the_communication_paths_and_the_load_sharing_of_the_routes._In_this_paper,_we_show_that_a_compact_and_expressive_abstraction_of_network_connectivity_by_the_medial_axis_enables_efficient_and_localized_routing._We_propose_MAP,_a_Medial_Axis_based_naming_and_routing_Protocol_that_does_not_require_locations,_makes_routing_decisions_locally,_and_achieves_good_load_balancing._In_its_preprocessing_phase,_MAP_constructs_the_medial_axis_of_the_sensor_field,_defined_as_the_set_of_nodes_with_at_least_two_closest_boundary_nodes._The_medial_axis_of_the_network_captures_both_the_complex_geometry_and_non-trivial_topology_of_the_sensor_field._It_can_be_represented_compactly_by_a_graph_whose_size_is_comparable_with_the_complexity_of_the_geometric_features_(e.g.,_the_number_of_holes)._Each_node_is_then_given_a_name_related_to_its_position_with_respect_to_the_medial_axis._The_routing_scheme_is_derived_through_local_decisions_based_on_the_names_of_the_source_and_destination_nodes_and_guarantees_delivery_with_reasonable_and_natural_routes._We_show_by_both_theoretical_analysis_and_simulations_that_our_medial_axis_based_geometric_routing_scheme_is_scalable,_produces_short_routes,_achieves_excellent_load_balancing,_and_is_very_robust_to_variations_in_the_network_model.'	candidate size: 12499
Time cost for this pair is 275.7600 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0838
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0838
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0838

24802	'Corrigendum:_weakest_failure_detector_for_wait-free_dining_under_eventual_weak_exclusion__This_corrigendum_corrects_and_clarifies_our_remarks_in_[2]_from_SPAA_2009_about_the_related_work_in_[1]_regarding_the_status_of_&#9674;_P__as_the_weakest_failure_detector_for_boosting_obstruction-freedom_to_wait-freedom._'	candidate size: 12499
26575	'AReNA:_adaptive_distributed_catalog_infrastructure_based_on_relevance_networks_Wide_area_applications_(WAAs)_utilize_a_WAN_infrastructure_(_e.g._,_the_Internet)_to_connect_a_federation_of_hundreds_of_servers_with_tens_of_thousands_of_clients._Earlier_generations_of_WAA_relied_on_Web_accessible_sources_and_the_http_protocol_for_data_delivery._Recent_developments_such_as_the_PlanetLab_[8]_testbed_is_now_demonstrating_an_emerging_class_of_data-_and_compute-_intensive_wide_area_applications.'	candidate size: 12499
Time cost for this pair is 148.0900 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0838
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0838
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0838

27290	'Research_challenges_in_wireless_networks_of_biomedical_sensors__Implanted_biomedical_devices_have_the_potential_to_revolutionize_medicine.__Smart_sensors_,_which_are_created_by_combining_sensing_materials_with_integrated_circuitry,_are_being_considered_for_several_biomedical_applications_such_as_a_glucose_level_monitor_or_a_retina_prosthesis._These_devices_require_the_capability_to_communicate_with_an_external_computer_system_(base_station)_via_a_wireless_interface._The_limited_power_and_computational_capabilities_of_smart_sensor_based_biological_implants_present_research_challenges_in_several_aspects_of_wireless_networking_due_to_the_need_for_having_a_bio-compatible,_fault-tolerant,_energy-efficient,_and_scalable_design._Further,_em_bedding_thesesensors_in_humans_add_additional_requirements._For_example,_the_wireless_networking_solutions_should_be_ultra-safe_and_reliable,_work_trouble-free_in_different_geographical_locations_(although_implants_are_typically_not_expected_to_move;_they_shouldnt_restrict_the_movements_of_their_human_host),_and_require_minimal_maintenance._This_necessitates_application-specific_solutions_which_are_vastly_different_from_traditional_solutions.__In_this_paper,_we_describe_the_potential_of_biomedical_smart_sensors._We_then_explain_the_challenges_for_wireless_networking_of_human-embedded_smart_sensor_arrays_and_our_preliminary_approach_for_wireless_networking_of_a_retina_prosthesis._Our_aim_is_to_motivate_vigorous_research_in_this_area_by_illustrating_the_need_for_more_application-specific_and_novel_approaches_toward_developing_wireless_networking_solutions_for_human-implanted_smart_sensors._'	candidate size: 12499
29821	'ZiFi:_wireless_LAN_discovery_via_ZigBee_interference_signatures__WiFi_networks_have_enjoyed_an_unprecedent_penetration_rate_in_recent_years._However,_due_to_the_limited_coverage,_existing_WiFi_infrastructure_only_provides_intermittent_connectivity_for_mobile_users._Once_leaving_the_current_network_coverage,_WiFi_clients_must_actively_discover_new_WiFi_access_points_(APs),_which_wastes_the_precious_energy_of_mobile_devices._Although_several_solutions_have_been_proposed_to_address_this_issue,_they_either_require_significant_modifications_to_existing_network_infrastructures_or_rely_on_context_information_that_is_not_available_in_unknown_environments._In_this_work,_we_develop_a_system_called_ZiFi_that_utilizes_ZigBee_radios_to_identify_the_existence_of_WiFi_networks_through_unique_interference_signatures_generated_by_WiFi_beacons._We_develop_a_new_digital_signal_processing_algorithm_called_Common_Multiple_Folding_(CMF)_that_accurately_amplifies_periodic_beacons_in_WiFi_interference_signals._ZiFi_also_adopts_a_constant_false_alarm_rate_(CFAR)_detector_that_can_minimize_the_false_negative_(FN)_rate_of_WiFi_beacon_detection_while_satisfying_the_user-specified_upper_bound_on_false_positive_(FP)_rate._We_have_implemented_ZiFi_on_two_platforms,_a_Linux_netbook_integrating_a_TelosB_mote_through_the_USB_interface,_and_a_Nokia_N73_smartphone_integrating_a_ZigBee_card_through_the_miniSD_interface._Our_experiments_show_that,_under_typical_settings,_ZiFi_can_detect_WiFi_APs_with_high_accuracy_(<5%_total_FP_and_FN_rate),_short_delay_(~780__ms_),_and_little_computation_overhead_'	candidate size: 12499
Time cost for this pair is 42.4500 seconds
[P_C]	[P_C]^(-1)	
precision: 0.8416
[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.1767
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.8416

27772	'Managing_RFID_data__Radio-Frequency_Identification_(RFID)_technology_enables_sensors_to_efficiently_and_inexpensively_track_merchandise_and_other_objects._The_vast_amount_of_data_resulting_from_the_proliferation_of_RFID_readers_and_tags_poses_some_interesting_challenges_for_data_management._We_present_a_brief_introduction_to_RFID_technology_and_highlight_a_few_of_the_data_management_challenges._'	candidate size: 12499
27837	'__This_paper_presents_three_new_results_concerning_credit-based_flow_control_for_ATM_networks:_(1)_a_simple_and_robust_credit_update_protocol_(CUP)_suited_for_relatively_inexpensive_hardware/software_implementation;_(2)_automatic_adaptation_of_credit_buffer_allocation_for_virtual_circuits_(VCs)_sharing_the_same_buffer_pool;_(3)_use_of_credit-based_flow_control_to_improve_the_effectiveness_of_statistical_multiplexing_in_minimizing_switch_memory._These_results_have_been_substantiated_by_analysis,_simulation_and_implementation._'	candidate size: 12499
Time cost for this pair is 168.0600 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0010
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0010
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0010

27771	'Integrating_automatic_data_acquisition_with_business_processes_experiences_with_SAPs_auto-ID_infrastructure__Smart_item_technologies,_like_RFID_and_sensor_networks,_are_considered_to_be_the_next_big_step_in_business_process_automation_[1]._Through_automatic_and_real-time_data_acquisition,_these_technologies_can_benefit_a_great_variety_of_industries_by_improving_the_efficiency_of_their_operations._SAPs_Auto-ID_infrastructure_enables_the_integration_of_RFID_and_sensor_technologies_with_existing_business_processes._In_this_paper_we_give_an_overview_of_the_existing_infrastructure,_discuss_lessons_learned_from_successful_customer_pilots,_and_point_out_some_of_the_open_research_issues._'	candidate size: 12499
22486	'__In_this_paper_a_method_is_proposed_how_to_achieve_response_times_of_main_memory_database_systems_without_keeping_the_whole_database_in_main_memory._The_method_was_originally_developed_for_real-time_systems_in_manufacturing_automation,_but_it_is_applicable_in_environments_where_canned_transactions_interact_with_databases_rather_than_people_performing_free_transactions._The_main_idea_is_to_preanalyse_canned_transactions_in_order_to_extract_knowledge_about_their_local_access_behaviour._This_knowledge_is_used_by_the_runtime_system_of_the_database_when_the_transaction_is_started._Concepts_for_modules_doing_the_preanalysis_and_the_runtime_tasks_are_described_in_detail._Furthermore_a_database_architecture_is_developed_incorporating_these_new_components._'	candidate size: 12499
Time cost for this pair is 156.8200 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0010
[P_C]	[P_C]^(-1)	[P_P]	
precision: 0.0022
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0010

27772	'Managing_RFID_data__Radio-Frequency_Identification_(RFID)_technology_enables_sensors_to_efficiently_and_inexpensively_track_merchandise_and_other_objects._The_vast_amount_of_data_resulting_from_the_proliferation_of_RFID_readers_and_tags_poses_some_interesting_challenges_for_data_management._We_present_a_brief_introduction_to_RFID_technology_and_highlight_a_few_of_the_data_management_challenges._'	candidate size: 12499
22486	'__In_this_paper_a_method_is_proposed_how_to_achieve_response_times_of_main_memory_database_systems_without_keeping_the_whole_database_in_main_memory._The_method_was_originally_developed_for_real-time_systems_in_manufacturing_automation,_but_it_is_applicable_in_environments_where_canned_transactions_interact_with_databases_rather_than_people_performing_free_transactions._The_main_idea_is_to_preanalyse_canned_transactions_in_order_to_extract_knowledge_about_their_local_access_behaviour._This_knowledge_is_used_by_the_runtime_system_of_the_database_when_the_transaction_is_started._Concepts_for_modules_doing_the_preanalysis_and_the_runtime_tasks_are_described_in_detail._Furthermore_a_database_architecture_is_developed_incorporating_these_new_components._'	candidate size: 12499
Time cost for this pair is 162.2800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0010
[P_P]^(-1)	[P_C]	[P_C]^(-1)	
precision: 0.0007
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0010

24096	'_This_paper_presents_Swing,_a_closed-loop,_network-responsive_traffic_generator_that_accurately_captures_the_packet_interactions_of_a_range_of_applications_using_a_simple_structural_model._Starting_from_observed_traffic_at_a_single_point_in_the_network,_Swing_automatically_extracts_distributions_for_user,_application,_and_network_behavior._It_then_generates_live_traffic_corresponding_to_the_underlying_models_in_a_network_emulation_environment_running_commodity_network_protocol_stacks._We_find_that_the_generated_traces_are_statistically_similar_to_the_original_traces._Further,_to_the_best_of_our_knowledge,_we_are_the_first_to_reproduce_burstiness_in_traffic_across_a_range_of_timescales_using_a_model_applicable_to_a_variety_of_network_settings._An_initial_sensitivity_analysis_reveals_the_importance_of_capturing_and_recreating_user,_application,_and_network_characteristics_to_accurately_reproduce_such_burstiness._Finally,_we_explore_Swings_ability_to_vary_user_characteristics,_application_properties,_and_wide-area_network_conditions_to_project_traffic_characteristics_into_alternate_scenarios.'	candidate size: 12499
31067	'Comparing_the_effectiveness_of_fine-grain_memory_caching_against_page_migration/replication_in_reducing_traffic_in_DSM_clusters___In_this_paper,_we_compare_and_contrast_two_techniques_to_improve_capacity/conflict_miss_traffic_in_CC-NUMA_DSM_clusters._Page_migration/replication_optimizes_read-write_accesses_to_a_page_used_by_a_single_processor_by_migrating_the_page_to_that_processor_and_replicates_all_read-shared_pages_in_the_sharers_local_memories._R-NUMA_optimizes_read-write_accesses_to_any_page_by_allowing_a_processor_to_cache_that_page_in_its_main_memory._Page_migration/replication_requires_less_hardware_complexity_as_compared_to_R-NUMA,_but_has_limited_applicability_and_incurs_much_higher_overheads_even_with_tuned_hardware/software_support.____In_this_paper,_we_compare_and_contrast_page_migration/replication_and_R-NUMA_on_simulated_clusters_of_symmetric_multiprocessors_executing_shared-memory_applications._Our_results_show_that:_(1)_both_page_migration/replication_and_R-NUMA_significantly_improve_the_system_performance_over_&ldquo;first-touch&rdquo;_migration_in_many_applications,_(2)_page_migration/replication_has_limited_opportunity_and_can_not_eliminate_all_the_capacity/conflict_misses_even_with_fast_hardware_support_and_unlimited_amount_of_memory,_(3)_R-NUMA_always_performs_best_given_a_page_cache_large_enough_to_fit_an_applications_primary_working_set_and_subsumes_page_migration/replication,_(4)_R-NUMA_benefits_more_from_hardware_support_to_accelerate_page_operations_than_page_migration/replication,_and_(5)_integrating_page_migration/replication_into_R-NUMA_to_help_reduce_the_hardware_cost_requires_sophisticated_mechanisms_and_policies_to_select_candidates_for_page_migration/replication_._'	candidate size: 12499
Time cost for this pair is 212.2700 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0085
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0085
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0085

24091	'_We_present_practical_models_for_the_physical_layer_behaviors_of_packet_reception_and_carrier_sense_with_interference_in_static_wireless_networks._These_models_use_measurements_of_a_real_network_rather_than_abstract_RF_propagation_models_as_the_basis_for_accuracy_in_complex_environments._Seeding_our_models_requires_N_trials_in_an_N_node_network,_in_which_each_sender_transmits_in_turn_and_receivers_measure_RSSI_values_and_packet_counts,_both_of_which_are_easily_obtainable._The_models_then_predict_packet_delivery_and_throughput_in_the_same_network_for_different_sets_of_transmitters_with_the_same_node_placements._We_evaluate_our_models_for_the_base_case_of_two_senders_that_broadcast_packets_simultaneously._We_find_that_they_are_effective_at_predicting_when_there_will_be_significant_interference_effects._Across_many_predictions,_we_obtain_an_RMS_error_for_802.11a_and_802.11b_of_a_half_and_a_third,_respectively,_of_a_measurement-based_model_that_ignores_interference.'	candidate size: 12499
20764	'Application_specific_data_replication_for_edge_services_The_emerging_edge_services_architecture_promises_to_improve_the_availability_and_performance_of_web_services_by_replicating_servers_at_geographically_distributed_sites._A_key_challenge_in_such_systems_is_data_replication_and_consistency_so_that_edge_server_code_can_manipulate_shared_data_without_incurring_the_availability_and_performance_penalties_that_would_be_incurred_by_accessing_a_traditional_centralized_database._This_paper_explores_using_a_distributed_object_architecture_to_build_an_edge_service_system_for_an_e-commerce_application,_an_online_bookstore_represented_by_the_TPC-W_benchmark._We_take_advantage_of_application_specific_semantics_to_design_distributed_objects_to_manage_a_specific_subset_of_shared_information_using_simple_and_effective_consistency_models._Our_experimental_results_show_that_by_slightly_relaxing_consistency_within_individual_distributed_objects,_we_can_build_an_edge_service_system_that_is_highly_available_and_efficient._For_example,_in_one_experiment_we_find_that_our_object-based_edge_server_system_provides_a_factor_of_five_improvement_in_response_time_over_a_traditional_centralized_cluster_architecture_and_a_factor_of_nine_improvement_over_an_edge_service_system_that_distributes_code_but_retains_a_centralized_database.'	candidate size: 12499
Time cost for this pair is 279.2600 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0085
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0085
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0085

22579	'__NonStop_SQL_is_an_implementation_of_ANSI_SQL_on_Tandem_Computer_Systems_Debit_Credit_is_a_widely_used_industry-standard_transaction._This_paper_summarizes_a_benchmark_of_NonStop_SQL_which_demonstrated_linear_growth_of_throughout_from_14_to_208_Debit_Credit_transactions_per_second_as_the_hardware_grew_from_2_to_32_processors._The_benchmark_also_compared_the_performance_of_NonStop_SQL_to_the_performance_of_a_record-at_a_time_file_system_interface_'	candidate size: 12499
23743	'_The_Web_is_a_distributed_system,_where_data_is_stored_and_disseminated_from_both__origin__servers_and__caches_._Origin_servers_provide_the_most_up-to-date_copy_whereas_caches_store_and_serve_copies_that_had_been_cached_for_a_while._Origin_servers_do_not_maintain_per-client_state,_and_weak-consistency_of_cached_copies_is_maintained_by_the_origin_server_attaching_to_each_copy_an_expiration_time._Typically,_the_lifetime-duration_of_an_object_is_fixed,_and_as_a_result,_a_copy_fetched_directly_from_its_origin_server_has_maximum_time-to-live_(TTL)_whereas_a_copy_obtained_through_a_cache_has_a_shorter_TTL_since_its__age__(elapsed_time_since_fetched_from_the_origin)_is_deducted_from_its_lifetime_duration._Thus,_a_cache_that_is_served_from_a_cache_would_incur_a_higher_miss-rate_than_a_cache_served_from_origin_servers._Similarly,_a_high-level_cache_would_receive_more_requests_from_the_same_client_population_than_an_origin_server_would_have_received._As_Web_caches_are_often_served_from_other_caches_(e.g.,_proxy_and_reverse-proxy_caches),_age_emerges_as_a_performance_factor._Guided_by_a_formal_model_and_analysis,_we_use_different_inter-request_time_distributions_and_trace-based_simulations_to_explore_the_effect_of_age_for_different_cache_settings_and_configurations._We_also_evaluate_the_effectiveness_of_frequent_pre-term_refreshes_by_higher-level_caches_as_a_means_to_decrease_client_misses._Beyond_Web_content_distribution,_our_conclusions_generally_apply_to_systems_of_caches_deploying_expiration-based_consistency.'	candidate size: 12499
Time cost for this pair is 224.8400 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0085
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0085
[P_P]	[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0484

23067	'__This_paper_describes_the_version_and_workspace_features_of_Microsoft_Repository,_a_layer_that_implements_fine-grained_objects_and_relationships_on_top_of_Microsoft_SQL_Server._It_supports_branching_and_merging_of_versions,_delta_storage,_checkout-checkin,_and_single-version_views_for_version-unaware_applications._'	candidate size: 12499
27299	'Automatic_performance_setting_for_dynamic_voltage_scaling___The_emphasis_on_processors_that_are_both_low_power_and_high_performance_has_resulted_in_the_incorporation_of_dynamic_voltage_scaling_into_processor_designs._This_feature_allows_one_to_make_fine_granularity_trade-offs_between_power_use_and_performance,_provided_there_is_a_mechanism_in_the_OS_to_control_that_trade-off._In_this_paper,_we_describe_a_novel_software_approach_to_automatically_controlling_dynamic_voltage_scaling_in_order_to_optimize_energy_use._Our_mechanism_is_implemented_in_the_Linux_kernel_and_requires_no_modification_of_user_programs._Unlike_previous_automated_approaches,_our_method_works_equally_well_with_irregular_and_multiprogrammed_workloads._Moreover,_it_has_the_ability_to_ensure_that_the_quality_of_interactive_performance_is_within_user_specified_parameters._Our_experiments_show_that_as_a_result_of_our_algorithm,_processor_energy_savings_of_as_much_as_75%_can_be_achieved_with_only_a_minimal_impact_on_the_user_experience.__'	candidate size: 12499
Time cost for this pair is 133.1100 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0010
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0010
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0010

28582	'An_implementation_of_a_multiprocessing_computer_system__A_PDP-1_computer_was_donated_(by_the_Digital_Equipment_Corporation)_to_the_Electrical_Engineering_Department_of_the_Massachusetts_Institute_of_Technology_in_late_1961._In_May,_1963_the_first_time-sharing_system_was_operational.___Since_1963_this_PDP-1_has_undergone_substantial_modifications_(c.f._Appendix)._Presently_the_machine_has_twelve_thousand_words_(18-bit)_of_five_microsecond_memory_arranged_in_pages_of_four_thousand_words._One_of_these_pages_is_reserved_for_the_system_code_and_is_protected_from_user_references._'	candidate size: 12499
27608	'Operating_System_Transactions__Applications_must_be_able_to_synchronize_accesses_to_operating_system_resources_in_order_to_ensure_correctness_in_the_face_of_concurrency_and_system_failures.__System_transactions__allow_the_programmer_to_specify_updates_to_heterogeneous_system_resources_with_the_OS_guaranteeing_atomicity,_consistency,_isolation,_and_durability_(ACID)._System_transactions_efficiently_and_cleanly_solve_persistent_concurrency_problems_that_are_difficult_to_address_with_other_techniques._For_example,_system_transactions_eliminate_security_vulnerabilities_in_the_file_system_that_are_caused_by_time-of-check-to-time-of-use_(TOCTTOU)_race_conditions._System_transactions_enable_an_unsuccessful_software_installation_to_roll_back_without_disturbing_concurrent,_independent_updates_to_the_file_system.___This_paper_describes_TxOS,_a_variant_of_Linux_2.6.22_that_implements_system_transactions._TxOS_uses_new_implementation_techniques_to_provide_fast,_serializable_transactions_with_strong_isolation_and_fairness_between_system_transactions_and_non-transactional_activity._The_prototype_demonstrates_that_a_mature_OS_running_on_commodity_hardware_can_provide_system_transactions_at_a_reasonable_performance_cost._For_instance,_a_transactional_installation_of_OpenSSH_incurs_only_10%_overhead,_and_a_non-transactional_compilation_of_Linux_incurs_negligible_overhead_on_TxOS._By_making_transactions_a_central_OS_abstraction,_TxOS_enables_new_transactional_services._For_example,_one_developer_prototyped_a_transactional__ext3__file_system_in_less_than_one_month._'	candidate size: 12499
Time cost for this pair is 28.6500 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0120
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.0120
[P_C]	[V_C]^(-1)	[P_V]^(-1)	
precision: 0.0120

23067	'__This_paper_describes_the_version_and_workspace_features_of_Microsoft_Repository,_a_layer_that_implements_fine-grained_objects_and_relationships_on_top_of_Microsoft_SQL_Server._It_supports_branching_and_merging_of_versions,_delta_storage,_checkout-checkin,_and_single-version_views_for_version-unaware_applications._'	candidate size: 12499
20704	'Broadcast_capacity_in_multihop_wireless_networks_In_this_paper_we_study_the__broadcast_capacity__of_multihop_wireless_networks_which_we_define_as_the_maximum_rate_at_which_broadcast_packets_can_be_generated_in_the_network_such_that_all_nodes_receive_the_packets_successfully_in_a_limited_time._We_employ_the_Protocol_Model_for_successful_packet_reception_usually_adopted_in_network_capacity_studies_and_provide_novel_upper_and_lower_bounds_for_the_broadcast_capacity_for_arbitrary_connected_networks._In_a_homogeneous_dense_network_these_bounds_simplify_to_&#920;(W/max(1,&#916;_d_))_where__W__is_the_wireless_channel_capacity,_&#916;_the_interference_parameter,_and__d__the_number_of_dimensions_of_space_in_which_the_network_lies._Interestingly,_we_show_that_the_broadcast_capacity_does_not_change_by_more_than_a_constant_factor_when_we_vary_the_number_of_nodes,_the_radio_range,_the_area_of_the_network,_and_even_the_node_mobility._To_address_the_achievability_of_capacity,_we_demonstrate_that_any_broadcast_scheme_based_on_a_backbone_of_size_proportional_to_the_Minimum_Connected_Dominating_Set_guarantees_a_throughput_within_a_constant_factor_of_the_broadcast_capacity._Finally,_we_demonstrate_that_broadcast_capacity,_in_stark_contrast_to_unicast_capacity,_does_not_depend_on_the_choice_of_source_nodes_or_the_dimension_of_the_network.'	candidate size: 12499
Time cost for this pair is 134.4100 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0010
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0010
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0010

28371	'Knowledge_discovery_in_patent_databases_In_our_days_the_business,_scientific_and_personal_databases_are_growing_in_an_exponential_rate._However,_what_is_truly_valuable_is_the_knowledge_that_can_be_extracted_from_the_stored_data._Knowledge_Discovery_in_patent_databases_was_traditionally_based_on_manual_analysis_carried_out_from_statistical_experts._Nowadays_the_increasing_interest_of_many_actors_have_led_to_the_development_of_new_tools_for_discovering_and_exploiting_information_related_to_technological_activities_and_innovation,_"hidden"_in_patent_databases._In_this_paper_we_present_a_system_that_combines_efficient_and_innovative_methodologies_and_tools_for_the_analysis_of_patent_data_stored_in_international_databases_and_the_production_of_scientific_and_technological_indicators.'	candidate size: 12499
24544	'OntoWiki_mobile:_knowledge_management_in_your_pocket__As_comparatively_powerful_mobile_computing_devices_become_more_common,_mobile_web_applications_have_started_gaining_in_popularity._Such_mobile_web_applications_as_Google_Mail_or_Calendar_are_already_in_everyday_use_of_millions_of_people._Some_first_examples_of_these_applications_use_Semantic_Web_technologies_and_information_in_the_form_of_RDF_(e.g._TripIt)._An_important_feature_of_these_applications_is_their_ability_to_provide_offline_functionality_with_local_updates_for_later_synchronization_with_a_web_server._The_key_problem_to_this_is_the_reconciliation,_i.e._the_problem_of_potentially__conflicting_updates__from__disconnected_clients_._In_this_paper_we_present_an_approach_for_a_mobile_semantic_collaboration_platform_based_on_the_OntoWiki_framework_[1]._It_allows_users_to_collect_instance_data_and_refine_the_structure_knowledge_bases_on_the_go._A_crucial_part_of_OntoWiki_Mobile_is_the_advanced_conflict_resolution_for_RDF_stores._The_approach_is_based_on_the_EvoPat_[2]_method_for_data_evolution_and_ontology_refactoring._'	candidate size: 12499
Time cost for this pair is 686.2500 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0003
[P_C]	[P_C]^(-1)	[P_P]^(-1)	[P_P]	
precision: 0.0004

28371	'Knowledge_discovery_in_patent_databases_In_our_days_the_business,_scientific_and_personal_databases_are_growing_in_an_exponential_rate._However,_what_is_truly_valuable_is_the_knowledge_that_can_be_extracted_from_the_stored_data._Knowledge_Discovery_in_patent_databases_was_traditionally_based_on_manual_analysis_carried_out_from_statistical_experts._Nowadays_the_increasing_interest_of_many_actors_have_led_to_the_development_of_new_tools_for_discovering_and_exploiting_information_related_to_technological_activities_and_innovation,_"hidden"_in_patent_databases._In_this_paper_we_present_a_system_that_combines_efficient_and_innovative_methodologies_and_tools_for_the_analysis_of_patent_data_stored_in_international_databases_and_the_production_of_scientific_and_technological_indicators.'	candidate size: 12499
24544	'OntoWiki_mobile:_knowledge_management_in_your_pocket__As_comparatively_powerful_mobile_computing_devices_become_more_common,_mobile_web_applications_have_started_gaining_in_popularity._Such_mobile_web_applications_as_Google_Mail_or_Calendar_are_already_in_everyday_use_of_millions_of_people._Some_first_examples_of_these_applications_use_Semantic_Web_technologies_and_information_in_the_form_of_RDF_(e.g._TripIt)._An_important_feature_of_these_applications_is_their_ability_to_provide_offline_functionality_with_local_updates_for_later_synchronization_with_a_web_server._The_key_problem_to_this_is_the_reconciliation,_i.e._the_problem_of_potentially__conflicting_updates__from__disconnected_clients_._In_this_paper_we_present_an_approach_for_a_mobile_semantic_collaboration_platform_based_on_the_OntoWiki_framework_[1]._It_allows_users_to_collect_instance_data_and_refine_the_structure_knowledge_bases_on_the_go._A_crucial_part_of_OntoWiki_Mobile_is_the_advanced_conflict_resolution_for_RDF_stores._The_approach_is_based_on_the_EvoPat_[2]_method_for_data_evolution_and_ontology_refactoring._'	candidate size: 12499
Time cost for this pair is 684.9900 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0003
[P_C]	[P_C]^(-1)	[P_P]^(-1)	[P_P]	
precision: 0.0004

27538	'__Cellular_radio_communication_is_a_significant_contributor_to_battery_energy_drain_on_smartphones,_in_some_cases_inflating_the_energy_cost_by_a_factor_of_5_or_more_compared_to_the_energy_cost_of_the_base_device._Stratus_is_a_system_to_reduce_this_energy_consumption_by_leveraging_cloud_resources_to_make_data_communication_on_smartphones_more_efficient._Using_a_cloud-based_proxy,_Stratus_employs_optimizations_that_adapt_an_applications_incoming_and_outgoing_traffic_to_better_match_the_energy_characteristics_of_the_radio_interface._The_optimizations_include_(a)_aggregation_to_bunch_up_sporadic_transmissions,_(b)_asymmetric_dictionary-based_compression_to_reduce_the_number_of_bits_transmitted_over_the_air,_and_(c)_opportunistic_scheduling_to_avoid_communication_during_periods_of_poor_signal_reception._These_optimizations_can_be_used_individually,_or_in_combination,_subject_to_an_applications_delay_tolerance._For_example,_using_our_Stratus_prototype,_the_aggregation_and_compression_optimizations_together_achieve_up_to_50%_energy_savings_for_web_browsing,_while_the_aggregation_and_scheduling_optimizations_together_achieve_up_to_35%_energy_savings_for_a_media_streaming_application._'	candidate size: 12499
24544	'OntoWiki_mobile:_knowledge_management_in_your_pocket__As_comparatively_powerful_mobile_computing_devices_become_more_common,_mobile_web_applications_have_started_gaining_in_popularity._Such_mobile_web_applications_as_Google_Mail_or_Calendar_are_already_in_everyday_use_of_millions_of_people._Some_first_examples_of_these_applications_use_Semantic_Web_technologies_and_information_in_the_form_of_RDF_(e.g._TripIt)._An_important_feature_of_these_applications_is_their_ability_to_provide_offline_functionality_with_local_updates_for_later_synchronization_with_a_web_server._The_key_problem_to_this_is_the_reconciliation,_i.e._the_problem_of_potentially__conflicting_updates__from__disconnected_clients_._In_this_paper_we_present_an_approach_for_a_mobile_semantic_collaboration_platform_based_on_the_OntoWiki_framework_[1]._It_allows_users_to_collect_instance_data_and_refine_the_structure_knowledge_bases_on_the_go._A_crucial_part_of_OntoWiki_Mobile_is_the_advanced_conflict_resolution_for_RDF_stores._The_approach_is_based_on_the_EvoPat_[2]_method_for_data_evolution_and_ontology_refactoring._'	candidate size: 12499
Time cost for this pair is 480.2900 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0003
[P_C]	[P_C]^(-1)	[P_A]	[P_A]^(-1)	
precision: 0.0002
[P_V]	[P_V]^(-1)	[P_P]	[P_V]	[P_V]^(-1)	
precision: 0.0003

24227	'Highly_distributed_XQuery_with_DXQ__Many_modern_applications,_from_Grid_computing_to_RSS_handling,_need_to_support_data_processing_in_a_distributed_environment._Currently,_most_such_applications_are_implemented_using_a_general_purpose_programming_language,_which_can_be_expensive_to_maintain,_hard_to_configure_and_modify,_and_require_hand_optimization_of_the_distributed_data_processing_operations._We_present_Distributed_XQuery_(DXQ),_a_simple,_yet_powerful,_extension_of_XQuery_to_support_distributed_applications._This_extension_includes_the_ability_to_deploy_networks_of_XQuery_servers,_to_remotely_invoke_XQuery_programs_on_those_servers,_and_to_ship_code_between_servers._Our_demonstration_presents_two_applications_implemented_in_DXQ:_the_resolution_algorithm_of_DNS,_the_Domain_Name_System,_and_the_Narada_overlay-network_protocol._We_show_that_our_system_can_flexibly_accommodate_different_patterns_of_distributed_computation_and_present_some_simple_but_essential_distributed_optimizations._'	candidate size: 12499
27877	'Towards_automatic_parallelization_of_tree_reductions_in_dynamic_programming_Tree_contraction_algorithms,_whose_idea_was_first_proposed_by_Miller_and_Reif,_are_important_parallel_algorithms_to_implement_efficient_parallel_programs_manipulating_trees._Despite_their_efficiency,_the_tree_contraction_algorithms_have_not_been_widely_used_due_to_the_difficulties_in_deriving_the_tree_contracting_operations._In_particular,_the_derivation_of_the_tree_contracting_operations_is_much_difficult_when_multiple_values_are_referred_and_updated_in_each_step_of_the_contractions._Such_computations_often_appear_in_dynamic_programming_problems_on_trees._In_this_paper,_we_propose_an_algebraic_approach_to_deriving_tree_contraction_programs_from_recursive_tree_programs,_by_focusing_on_the_properties_of_commutative_semirings._We_formalize_a_new_condition_for_implementing_tree_reductions_with_the_tree_contraction_algorithms,_and_give_a_systematic_derivation_of_the_tree_contracting_operations._Based_on_it,_we_implemented_a_code_generator_for_tree_reductions,_which_has_an_optimization_mechanism_that_can_remove_unnecessary_computations_in_the_derived_parallel_programs._As_far_as_we_are_aware,_this_is_the_first_step_towards_an_automatic_parallelization_system_for_the_development_of_efficient_tree_programs.'	candidate size: 12499
Time cost for this pair is 183.2800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0052
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0052
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0052

28028	'On_abstractions_of_parallel_programs__We_discuss_a_parallel_program_model_that_allows_a_very_general_synchronization_mechanism_with_a_scheduler_to_control_the_progress_of_processes_&ldquo;undergoing_synchronization.&rdquo;_We_how_to_&ldquo;abstract&rdquo;_the_program,_i.e._remove_the_scheduler,_resulting_in_a_simpler_program._We_then_show_that,_for_a_large_class_of_schedulers,_a_process_can_become_deadlocked_in_the_original_program_iff_it_can_become_deadlocked_in_the_abstracted_program._'	candidate size: 12499
24783	'Brief_announcement:_serial-parallel_reciprocity_in_dynamic_multithreaded_languages__In_dynamically_multithreaded_platforms_that_employ_work_stealing,_there_appears_to_be_a_fundamental_tradeoff_between_providing_provably_good_time_and_space_bounds_and_supporting__SP-reciprocity_,_the_property_of_allowing_arbitrary_calling_between_parallel_and_serial_code,_including_legacy_serial_binaries._Many_known_dynamically_multithreaded_platforms_either_fail_to_support_SP-reciprocity_or_sacrifice_on_the_provable_time_and_space_bounds_that_an_efficient_work-stealing_scheduler_could_otherwise_guarantee.___We_describe_PR-Cilk,_a_design_of_a_runtime_system_that_supports_SP-reciprocity_in_PR-Cilk_and_provides_provable_bounds_on_time_and_space._In_order_to_maintain_the_space_bound,_PR-Cilk_uses__subtree-restricted_work_stealing_._We_show_that_with_subtree-restricted_work_stealing,_PR-Cilk_provides_the_same_guarantee_on_stack_space_usage_as_ordinary_Cilk._The_completion_time_guaranteed_by_PR-Cilk_is_slightly_worse_than_ordinary_Cilk._Nevertheless,_if_the_number_of_times_a_C_function_calls_a_Cilk_function_is_small,_or_if_each_Cilk_function_called_by_a_C_function_is_sufficiently_parallel,_PR-Cilk_still_guarantees_linear_speedup._'	candidate size: 12499
Time cost for this pair is 451.7200 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0052
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0052
[P_T]	[P_T]^(-1)	[P_A]	[P_A]^(-1)	
precision: 0.0052

30065	'A_new_solution_to_the_critical_section_problem__A_classical_problem_in_concurrent_program_control_is_to_provide_a_mechanism_whereby_several_processes_running_concurrently_can_gain_exclusive_control_of_a_resource._For_each_process,_the_section_of_its_program_in_which_it_accesses_the_resource_is_called_its__critical_section,__and_the_problem_is_called_the__critical_section_problem.__A_solution_to_the_critical_section_problem_guarantees_that_no_more_than_one_process_can_be_in_its_critical_section_at_any_time._The_solution_presented_here_improves_on_previous_solutions_by_allowing_processes_to_enter_their_critical_sections_on_a_first-come_first-served_basis._'	candidate size: 12499
31539	'Leveraging_non-blocking_collective_communication_in_high-performance_applications__Although_overlapping_communication_with_computation_is_an_important_mechanism_for_achieving_high_performance_in_parallel_programs,_developing_applications_that_actually_achieve_good_overlap_can_be_difficult._Existing_approaches_are_typically_based_on_manual_or_compiler-based_transformations._This_paper_presents_a_pattern_and_library-based_approach_to_optimizing_collective_communication_in_parallel_high-performance_applications,_based_on_using_non-blocking_collective_operations_to_enable_overlapping_of_communication_and_computation._Common_communication_and_computation_patterns_in_iterative_SPMD_computations_are_used_to_motivate_the_transformations_we_present._Our_approach_provides_the_programmer_with_the_capability_to_separately_optimize_communication_and_computation_in_an_application,_while_automating_the_interaction_between_computation_and_communication_to_achieve_maximum_overlap._Performance_results_with_a_model_application_show_more_than_a_90%_decrease_in_communication_overhead,_resulting_in_21%_overall_performance_improvements._'	candidate size: 12499
Time cost for this pair is 174.8000 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0052
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0052
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0052

22247	'Towards_automating_regression_test_selection_for_web_services__This_paper_reports_a_safe_regression_test_selection_(RTS)_approach_that_is_designed_for_verifying_Web_services_in_an_end-to-end_manner._The_Safe_RTS_technique_has_been_integrated_into_a_systematic_method_that_monitors_distributed_code_modifications_and_automates_the_RTS_and_RT_processes._'	candidate size: 12499
22243	'Discovering_the_best_web_service__Major_research_challenges_in_discovering_Web_services_include,_provisioning_of_services_across_multiple_or_heterogeneous_registries,_differentiating_between_services_that_share_similar_functionalities,_improving_end-to-end_Quality_of_Service_(QoS),_and_enabling_clients_to_customize_the_discovery_process._Proliferation_and_interoperability_of_this_multitude_of_Web_services_have_lead_to_the_emergence_of_new_standards_on_how_services_can_be_published,_discovered,_or_used_(i.e._UDDI,_WSDL,_SOAP)._Such_standards_can_potentially_provide_many_of_these_features_and_much_more,_however,_there_are_technical_challenges_associated_with_existing_standards._One_of_these_challenges_is_the_client.s_ability_to_control_the_discovery_process_across_accessible_service_registries_for_finding_services_of_interest._This_work_proposes_a_solution_to_this_problem_and_introduces_the_Web_Service_Relevancy_Function_(WsRF)_used_for_measuring_the_relevancy_ranking_of_a_particular_Web_service_based_on_QoS_metrics_and_client_preferences._We_present_experimental_validation,_results,_and_analysis_of_the_presented_ideas._'	candidate size: 12499
Time cost for this pair is 42.4700 seconds
[P_V]	[P_V]^(-1)	
precision: 0.0935
[P_C]	[P_C]^(-1)	
precision: 0.0563
[P_T]	[P_T]^(-1)	
precision: 0.0134

22255	'Parallel_crawling_for_online_social_networks__Given_a_huge_online_social_network,_how_do_we_retrieve_information_from_it_through_crawling?_Even_better,_how_do_we_improve_the_crawling_performance_by_using_parallel_crawlers_that_work_independently?_In_this_paper,_we_present_the_framework_of_parallel_crawlers_for_online_social_networks,_utilizing_a_centralized_queue._To_show_how_this_works_in_practice,_we_describe_our_implementation_of_the_crawlers_for_an_online_auction_website._The_crawlers_work_independently,_therefore_the_failing_of_one_crawler_does_not_affect_the_others_at_all._The_framework_ensures_that_no_redundant_crawling_would_occur._Using_the_crawlers_that_we_built,_we_visited_a_total_of_approximately_11_million_auction_users,_about_66,000_of_which_were_completely_crawled._'	candidate size: 12499
21130	'Challenges_and_practices_in_deploying_web_acceleration_solutions_for_distributed_enterprise_systems_For_most_Web-based_applications,_contents_are_created_dynamically_based_on_the_current_state_of_a_business,_such_as_product_prices_and_inventory,_stored_in_database_systems._These_applications_demand_personalized_content_and_track_user_behavior_while_maintaining_application_integrity._Many_of_such_practices_are_not_compatible_with_Web_acceleration_solutions._Consequently,_although_many_web_acceleration_solutions_have_shown_promising_performance_improvement_and_scalability,_architecting_and_engineering_distributed_enterprise_Web_applications_to_utilize_available_content_delivery_networks_remains_a_challenge._In_this_paper,_we_examine_the_challenge_to_accelerate_J2EE-based_enterprise_web_applications._We_list_obstacles_and_recommend_some_practices_to_transform_typical_database-driven_J2EE_applications_to_cache_friendly_Web_applications_where_Web_acceleration_solutions_can_be_applied._Furthermore,_such_transformation_should_be_done_without_modification_to_the_underlying_application_business_logic_and_without_sacrificing_functions_that_are_essential_to_e-commerce._We_take_the_J2EE_reference_software,_the_Java_PetStore,_as_a_case_study._By_using_the_proposed_guideline,_we_are_able_to_cache_more_than_90%_of_the_content_in_the_PetStore_and_scale_up_the_Web_site_more_than_20_times.'	candidate size: 12499
Time cost for this pair is 47.2800 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0563
[P_T]	[P_T]^(-1)	
precision: 0.0134
[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0236

22163	'Turning_portlets_into_services:_the_consumer_profile__Portlets_strive_to_play_at_the_front_end_the_same_role_that_Web_services_currently_enjoy_at_the_back_end,_namely,_enablers_of_application_assembly_through_reusable_services._However,_it_is_well-known_in_the_component_community_that,_the_larger_the_component,_the_more_reduced_the_reuse._Hence,_the_coarse-grained_nature_of_portlets_(they_encapsulate_also_the_presentation_layer)_can_jeopardize_this_vision_of_portlets_as_reusable_services._To_avoid_this_situation,_this_work_proposes_a_perspective_shift_in_portlet_development_by_introducing_the_notion_of__Consumer_Profile_._While_the_user_profile_characterizes_the_end_user_(e.g._age,_name,_etc),_the_Consumer_Profile_captures_the_idiosyncrasies_of_the_organization_through_which_the_portlet_is_being_delivered_(e.g._the_portal_owner)_as_far_as_the_portlet_functionality_is_concerned._The_user_profile_can_be_dynamic_and_hence,_requires_the_portlet_to_be_customized_at_runtime._By_contrast,_the_Consumer_Profile_is_known_at_registration_time,_and_it_is_not_always_appropriate/possible_to_consider_it_at_runtime._Rather,_it_is_better_to_customize_the_code_at_development_time,_and_produce_an_organization-specific_portlet_which_built-in,_custom_functionality._In_this_scenario,_we_no_longer_have_a_portlet_but_a_family_of_portlets,_and_the_portlet_provider_becomes_the_"assembly_line"_of_this_family._This_work_promotes_this_vision_by_introducing_an_organization-aware,_WSRPcompliant_architecture_that_let_portlet_consumers_registry_and_handle_"family_portlets"_in_the_same_way_that_"traditional_portlets"._In_so_doing,_portlets_are_nearer_to_become_truly__reusable__services._'	candidate size: 12499
24403	'Pregel:_a_system_for_large-scale_graph_processing__Many_practical_computing_problems_concern_large_graphs._Standard_examples_include_the_Web_graph_and_various_social_networks._The_scale_of_these_graphs_-_in_some_cases_billions_of_vertices,_trillions_of_edges_-_poses_challenges_to_their_efficient_processing._In_this_paper_we_present_a_computational_model_suitable_for_this_task._Programs_are_expressed_as_a_sequence_of_iterations,_in_each_of_which_a_vertex_can_receive_messages_sent_in_the_previous_iteration,_send_messages_to_other_vertices,_and_modify_its_own_state_and_that_of_its_outgoing_edges_or_mutate_graph_topology._This_vertex-centric_approach_is_flexible_enough_to_express_a_broad_set_of_algorithms._The_model_has_been_designed_for_efficient,_scalable_and_fault-tolerant_implementation_on_clusters_of_thousands_of_commodity_computers,_and_its_implied_synchronicity_makes_reasoning_about_programs_easier._Distribution-related_details_are_hidden_behind_an_abstract_API._The_result_is_a_framework_for_processing_large_graphs_that_is_expressive_and_easy_to_program._'	candidate size: 12499
Time cost for this pair is 139.3800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0134
[P_C]	[P_C]^(-1)	[P_P]	
precision: 0.0211
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0134

28250	'__Argus_is_a_programming_language_and_system_developed_to_support_the_construction_and_execution_of_distributed_programs._This_paper_describes_the_implementation_of_Argus,_with_particular_emphasis_on_the_way_we_implement_atomic_actions,_because_this_is_where_Argus_differs_most_from_other_implemented_systems._The_paper_also_discusses_the_performance_of_Argus._The_cost_of_actions_is_quite_reasonable,_indicating_that_action_systems_like_Argus_are_practical._'	candidate size: 12499
21365	'Building_adaptable_and_reusable_XML_applications_with_model_transformations_We_present_an_approach_in_which_the_semantics_of_an_XML_language_is_defined_by_means_of_a_transformation_from_an_XML_document_model_(an_XML_schema)_to_an_application_specific_model._The_application_specific_model_implements_the_intended_behavior_of_documents_written_in_the_language._A_transformation_is_specified_in_a_model_transformation_language_used_in_the_Model_Driven_Architecture_(MDA)_approach_for_software_development._Our_approach_provides_a_better_separation_of_three_concerns_found_in_XML_applications:_syntax,_syntax_processing_logic_and_intended_meaning_of_the_syntax._It_frees_the_developer_of_low-level_syntactical_details_and_improves_the_adaptability_and_reusability_of_XML_applications._Declarative_transformation_rules_and_the_explicit_application_model_provide_a_finer_control_over_the_application_parts_affected_by_adaptations._Transformation_rules_and_the_application_model_for_an_XML_language_may_be_composed_with_the_corresponding_rules_and_application_models_defined_for_other_XML_languages._In_that_way_we_achieve_reuse_and_composition_of_XML_applications.'	candidate size: 12499
Time cost for this pair is 214.9300 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0058
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0058
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0058

22603	'__We_propose_a_database_logic_which_accounts_in_a_clean_declarative_fashion_for_most_of_the_&ldquo;object-oriented&rdquo;_features_such_as_object_identity,_complex_objects,_inheritance,_methods,_etc._Furthermore,_database_schema_is_part_of_the_object_language,_which_allows_the_user_to_browse_schema_and_data_using_the_same_declarative_formalism._The_proposed_logic_has_a_formal_semantics_and_a_sound_and_complete_resolution-based_proof_procedure,_which_makes_it_also_computationally_attractive._'	candidate size: 12499
24378	'LearnPADS:_automatic_tool_generation_from_ad_hoc_data__In_this_demonstration,_we_will_present_LEARNPADS,_a_fully_automatic_system_for_generating_ad_hoc_data_processing_tools._When_presented_with_a_collection_of_ad_hoc_data,_the_system_(1)_analyzes_the_data,_(2)_infers_a_PADS_[4,_5]_description,_(3)_generates_parser,_printer,_validation_and_traversal_libraries_and_(4)_links_these_libraries_with_format-independent_tool_suites_to_form_stand-alone_applications._These_applications_provide_statistical_analysis,_XML_conversion,_CSV_conversion,_the_ability_to_query_with_the_Galax_XQuery_engine_[3],_and_the_ability_to_graph_selected_data_elements,_all_directly_from_ASCII_ad_hoc_data_without_human_intervention._SIGMOD_attendees_will_see_both_the_user_experience_with_LEARNPADS_and_the_internals_of_the_multi-phase_inference_algorithm_which_lies_at_the_heart_of_the_system._'	candidate size: 12499
Time cost for this pair is 58.2500 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0106
[P_T]	[P_T]^(-1)	
precision: 0.0058
[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0049

24378	'LearnPADS:_automatic_tool_generation_from_ad_hoc_data__In_this_demonstration,_we_will_present_LEARNPADS,_a_fully_automatic_system_for_generating_ad_hoc_data_processing_tools._When_presented_with_a_collection_of_ad_hoc_data,_the_system_(1)_analyzes_the_data,_(2)_infers_a_PADS_[4,_5]_description,_(3)_generates_parser,_printer,_validation_and_traversal_libraries_and_(4)_links_these_libraries_with_format-independent_tool_suites_to_form_stand-alone_applications._These_applications_provide_statistical_analysis,_XML_conversion,_CSV_conversion,_the_ability_to_query_with_the_Galax_XQuery_engine_[3],_and_the_ability_to_graph_selected_data_elements,_all_directly_from_ASCII_ad_hoc_data_without_human_intervention._SIGMOD_attendees_will_see_both_the_user_experience_with_LEARNPADS_and_the_internals_of_the_multi-phase_inference_algorithm_which_lies_at_the_heart_of_the_system._'	candidate size: 12499
20790	'A_framework_for_coordinated_multi-modal_browsing_with_multiple_clients_As_users_acquire_or_gain_access_to_an_increasingly_diverse_range_of_web_access_clients,_web_applications_are_adapting_their_user_interfaces_to_support_multiple_modalities_on_multiple_client_types._User_experiences_can_be_enhanced_by_clients_with_differing_capabilities_combining_to_provide_a_distributed_user_interface_to_applications._Indeed,_users_will_be_frustrated_if_their_interaction_with_applications_is_limited_to_one_client_at_a_time.This_paper_discusses_the_requirements_for_coordinating_web_interaction_across_an_aggregation_of_clients._We_present_a_framework_for_multi-device_browsing_that_provides_both_coordinated_navigation_between_web_resources_and_coordinated_interaction_between_variants,_or_representations,_of_those_resources_once_instantiated_in_the_clients._The_framework_protects_the_application_from_some_of_the_complexities_of_client_aggregation.We_show_how_a_small_number_of_enhancements_to_the_XForms_and_XML_Events_vocabularies_can_facilitate_coordination_between_clients_and_provide_an_appropriate_level_of_control_to_applications._We_also_describe_a_novel_proxy_which_consolidates_HTTP_requests_from_aggregations_of_clients_and_reduces_the_burden_that_multi-client_browsing_places_on_the_application.'	candidate size: 12499
Time cost for this pair is 197.8400 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0058
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0058
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0058

28468	'__The_designer_of_a_virtual_memory_system_can_obtain_accurate_estimates_of_the_average_memory_requirements_of_programs_running_in_the_system_by_weighting_the_average_allocation_during_execution_intervals_with_the_average_allocation_during_page_waiting_intervals._We_show_how_to_combine_the_averages,_how_to_use_the_measure_to_determine_the_size_of_primary_memory_while_achieving_system_balance_between_memory_and_processor_demands,_and_how_to_partially_order_the_performance_of_paging_algorithms._'	candidate size: 12499
21410	'WebPod:_persistent_Web_browsing_sessions_with_pocketable_storage_devices_We_present_WebPod,_a_portable_system_that_enables_mobile_users_to_use_the_same_persistent,_personalized_web_browsing_session_on_any_Internet-enabled_device._No_matter_what_computer_is_being_used,_WebPod_provides_a_consistent_browsing_session,_maintaining_all_of_a_users_plugins,_bookmarks,_browser_web_content,_open_browser_windows,_and_browser_configuration_options_and_preferences._This_is_achieved_by_leveraging_rapid_improvements_in_capacity,_cost,_and_size_of_portable_storage_devices._WebPod_provides_a_virtualization_and_checkpoint/restart_mechanism_that_decouples_the_browsing_environment_from_the_host,_enabling_web_browsing_sessions_to_be_suspended_to_portable_storage,_carried_around,_and_resumed_from_the_storage_device_on_another_computer._WebPod_virtualization_also_isolates_web_browsing_sessions_from_the_host,_protecting_the_browsing_privacy_of_the_user_and_preventing_malicious_web_content_from_damaging_the_host._We_have_implemented_a_Linux_WebPod_prototype_and_demonstrate_its_ability_to_quickly_suspend_and_resume_web_browsing_sessions,_enabling_a_seamless_web_browsing_experience_for_mobile_users_as_they_move_among_computers.'	candidate size: 12499
Time cost for this pair is 110.3700 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0256
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0256
[P_P]	[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.3517

31344	'A_virtual_machine_monitor_for_utilizing_non-dedicated_clusters_We_have_designed_and_implemented_a_virtual_machine_monitor_(VMM)_for_utilizing_non-dedicated_clusters._The_VMM_virtualizes_a_shared-memory_multi-processor_machine_on_a_commodity_cluster._In_addition,_it_hides_dynamic_changes_of_physical_hardware_configurations._The_experimental_result_demonstrates_the_feasibility_of_our_approach.'	candidate size: 12499
29858	'__The_efficiency_of_replacement_algorithms_in_paged_virtual-storage_systems_depends_on_the_locality_of_memory_references._The_restructuring_of_the_blocks_which_compose_the_program_may_improve_this_locality._[HATFIELD_and_GERALD_71]_[MASUDA_SHIOTA_NOGUCHI_and_OHKI_74]_[FERRARI_76].___In_confining_this_restructuring_to_the_link-editing_operation,_a_general_and_completely_automatic_solution_has_been_implemented,_in_the_form_of_a_self-adaptative_system,_on_the_SIRIS_8_operating_system._A_reduction_of_40_to_70%_in_the_page_fault_rate_has_been_obtained._'	candidate size: 12499
Time cost for this pair is 34.9900 seconds
[P_C]	[P_C]^(-1)	
precision: 0.6747
[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.6747
[P_V]	[V_C]	[P_C]^(-1)	
precision: 0.6747

28263	'Deadlock-free_packet_switching_networks__Deadlock_is_one_of_the_most_serious_system_failures_that_can_occur_in_a_computer_system_or_a_network._Deadlock_states_have_been_observed_in_existing_computer_networks_emphasizing_the_need_for_carefully_designed_flow_control_procedures_(controllers)_to_avoid_deadlocks._Such_a_deadlock-free_controller_is_readily_found_if_we_allow_it_global_information_about_the_overall_network_state._Generally,_this_assumption_is_not_realistic,_and_we_must_resort_to_deadlock_free_local_controllers_using_only_packet_and_node_information._We_present_here_several_types_of_such_controllers,_we_study_their_relationship_and_give_a_proof_of_their_optimality_with_respect_to_deadlock_free_controllers_using_the_same_set_of_local_parameters._'	candidate size: 12499
31068	'Asynchronous_scheduling_of_redundant_disk_arrays__Random_redundant_allocation_of_data_to_parallel_disk_arrays_can_be_exploited_to_achieve_low_access_delays._New_algorithms_are_proposed_which_improve_the_previously_known_shortest_queue_algorithm_by_systematically_exploiting_that_scheduling_decisions_can_be_deferred_until_a_block_access_is_actually_started_on_a_disk._These_algorithms_are_also_generalized_for_coding_schemes_with_low_redundancy._Using_extensive_experiments,_practically_important_quantities_are_measured_which_have_so_far_eluded_an_analytical_treatment:_The_delay_distribution_when_a_stream_of_requests_approaches_the_limit_of_the_system_capacity,_the_system_efficiency_for_parallel_disk_applications_with_bounded_prefetching_buffers,_and_the_combination_of_both_for_mixed_traffic._A_further_step_towards_practice_is_taken_by_outlining_the_system_design_for_&agr;:__a_utomatically__l_oad-balanced__p_arallel__h_ard-disk__a_rray._'	candidate size: 12499
Time cost for this pair is 185.9800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0256
[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.0137
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0256

20130	'A_flexible_simulation_environment_for_flash-aware_algorithms__In_this_paper,_we_present_a_flexible_simulation_environment_for_the_performance_evaluation_of_flash-aware_algorithms,_which_is_called_Flash-DBSim._The_main_purpose_of_Flash-DBSim_is_to_provide_a_configurable_virtual_flash_disk_for_upper_systems,_such_as_file_system_and_DBMS,_so_that_the_algorithms_in_those_systems_can_be_easily_evaluated_on_different_types_of_flash_disks._Moreover,_it_also_offers_a_prototyping_environment_for_those_algorithms_inside_flash_disk,_e.g._the_algorithms_for_garbage_collection_or_wear-leveling._After_an_overview_of_the_general_features_of_Flash-DBSim,_we_discuss_the_architecture_of_Flash-DBSim._And_finally,_a_case_study_of_Flash-DBSims_demonstration_is_presented._'	candidate size: 12499
28857	'Supermatrix_out-of-order_scheduling_of_matrix_operations_for_SMP_and_multi-core_architectures__We_discuss_the_high-performance_parallel_implementation_and_execution_of_dense_linear_algebra_matrix_operations_on_SMP_architectures,_with_an_eye_towards_multi-core_processors_with_many_cores._We_argue_that_traditional_implementations,_as_those_incorporated_in_LAPACK,_cannot_be_easily_modified_to_render_high_performance_as_well_as_scalability_on_these_architectures._The_solution_we_propose_is_to_arrange_the_data_structures_and_algorithms_so_that_matrix_blocks_become_the_fundamental_units_of_data,_and_operations_on_these_blocks_become_the_fundamental_units_of_computation,_resulting_in_algorithms-by-blocks_as_opposed_to_the_more_traditional_blocked_algorithms._We_show_that_this_facilitates_the_adoption_of_techniques_akin_to_dynamic_scheduling_and_out-of-order_execution_usual_in_superscalar_processors,_which_we_name__SuperMatrix_Out-of-Order_scheduling_._Performance_results_on_a_16_CPU_Itanium2-based_server_are_used_to_highlight_opportunities_and_issues_related_to_this_new_approach._'	candidate size: 12499
Time cost for this pair is 130.4800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0002
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0002

20130	'A_flexible_simulation_environment_for_flash-aware_algorithms__In_this_paper,_we_present_a_flexible_simulation_environment_for_the_performance_evaluation_of_flash-aware_algorithms,_which_is_called_Flash-DBSim._The_main_purpose_of_Flash-DBSim_is_to_provide_a_configurable_virtual_flash_disk_for_upper_systems,_such_as_file_system_and_DBMS,_so_that_the_algorithms_in_those_systems_can_be_easily_evaluated_on_different_types_of_flash_disks._Moreover,_it_also_offers_a_prototyping_environment_for_those_algorithms_inside_flash_disk,_e.g._the_algorithms_for_garbage_collection_or_wear-leveling._After_an_overview_of_the_general_features_of_Flash-DBSim,_we_discuss_the_architecture_of_Flash-DBSim._And_finally,_a_case_study_of_Flash-DBSims_demonstration_is_presented._'	candidate size: 12499
21271	'Feature-based_recommendation_system_The_explosive_growth_of_the_world-wide-web_and_the_emergence_of_e-commerce_has_led_to_the_development_of__recommender_systems_--a_personalized_information_filtering_technology_used_to_identify_a_set_of__N__items_that_will_be_of_interest_to_a_certain_user._User-based_and_model-based_collaborative_filtering_are_the_most_successful_technology_for_building_recommender_systems_to_date_and_is_extensively_used_in_many_commercial_recommender_systems._The_basic_assumption_in_these_algorithms_is_that_there_are_sufficient_historical_data_for_measuring_similarity_between_products_or_users._However,_this_assumption_does_not_hold_in_various_application_domains_such_as_electronics_retail,_home_shopping_network,_on-line_retail_where_new_products_are_introduced_and_existing_products_disappear_from_the_catalog._Another_such_application_domains_is_home_improvement_retail_industry_where_a_lot_of_products_(such_as_window_treatments,_bathroom,_kitchen_or_deck)_are_custom_made._Each_product_is_unique_and_there_are_very_little_duplicate_products._In_this_domain,_the_probability_of_the_same_exact_two_products_bought_together_is_close_to_zero._In_this_paper,_we_discuss_the_challenges_of_providing_recommendation_in_the_domains_where_no_sufficient_historical_data_exist_for_measuring_similarity_between_products_or_users._We_present_feature-based_recommendation_algorithms_that_overcome_the_limitations_of_the_existing__top-n__recommendation_algorithms._The_experimental_evaluation_of_the_proposed_algorithms_in_the_real_life_data_sets_shows_a_great_promise._The_pilot_project_deploying_the_proposed_feature-based_recommendation_algorithms_in_the_on-line_retail_web_site_shows_75%_increase_in_the_recommendation_revenue_for_the_first_2_month_period.'	candidate size: 12499
Time cost for this pair is 32.7800 seconds
[P_C]	[P_C]^(-1)	
precision: 0.0012
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.0012

20130	'A_flexible_simulation_environment_for_flash-aware_algorithms__In_this_paper,_we_present_a_flexible_simulation_environment_for_the_performance_evaluation_of_flash-aware_algorithms,_which_is_called_Flash-DBSim._The_main_purpose_of_Flash-DBSim_is_to_provide_a_configurable_virtual_flash_disk_for_upper_systems,_such_as_file_system_and_DBMS,_so_that_the_algorithms_in_those_systems_can_be_easily_evaluated_on_different_types_of_flash_disks._Moreover,_it_also_offers_a_prototyping_environment_for_those_algorithms_inside_flash_disk,_e.g._the_algorithms_for_garbage_collection_or_wear-leveling._After_an_overview_of_the_general_features_of_Flash-DBSim,_we_discuss_the_architecture_of_Flash-DBSim._And_finally,_a_case_study_of_Flash-DBSims_demonstration_is_presented._'	candidate size: 12499
28857	'Supermatrix_out-of-order_scheduling_of_matrix_operations_for_SMP_and_multi-core_architectures__We_discuss_the_high-performance_parallel_implementation_and_execution_of_dense_linear_algebra_matrix_operations_on_SMP_architectures,_with_an_eye_towards_multi-core_processors_with_many_cores._We_argue_that_traditional_implementations,_as_those_incorporated_in_LAPACK,_cannot_be_easily_modified_to_render_high_performance_as_well_as_scalability_on_these_architectures._The_solution_we_propose_is_to_arrange_the_data_structures_and_algorithms_so_that_matrix_blocks_become_the_fundamental_units_of_data,_and_operations_on_these_blocks_become_the_fundamental_units_of_computation,_resulting_in_algorithms-by-blocks_as_opposed_to_the_more_traditional_blocked_algorithms._We_show_that_this_facilitates_the_adoption_of_techniques_akin_to_dynamic_scheduling_and_out-of-order_execution_usual_in_superscalar_processors,_which_we_name__SuperMatrix_Out-of-Order_scheduling_._Performance_results_on_a_16_CPU_Itanium2-based_server_are_used_to_highlight_opportunities_and_issues_related_to_this_new_approach._'	candidate size: 12499
Time cost for this pair is 130.5400 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

24368	'HERMES:_aggregative_LBS_via_a_trajectory_DB_engine__We_present_HERMES,_a_prototype_system_based_on_a_powerful_query_language_for_trajectory_databases,_which_enables_the_support_of_aggregative_Location-Based_Services_(LBS)._The_key_observation_that_motivates_HERMES_is_that_the_more_the_knowledge_in_hand_about_the_trajectory_of_a_mobile_user,_the_better_the_exploitation_of_the_advances_in_spatio-temporal_query_processing_for_providing_intelligent_LBS._HERMES_is_fully_incorporated_into_a_state-of-the-art_Object-Relational_DBMS,_and_its_demonstration_illustrates_its_flexibility_and_usefulness_for_delivering_custom-defined_LBS._'	candidate size: 12499
30770	'On_obfuscating_point_functions_We_investigate_the_possibility_of_obfuscating_point_functions_in_the_framework_of_Barak_et_al._from_Crypto_01._A_point_function_is_a_Boolean_function_that_assumes_the_value_1_at_exactly_one_point._Our_main_results_are_as_follows:We_provide_a_simple_construction_of_efficient_obfuscators_for_point_functions_for_a_slightly_relaxed_notion_of_obfuscation,_for_which_obfuscating_general_circuits_is_nonetheless_impossible._Our_construction_relies_on_the_existence_of_a_very_strong_one-way_permutation,_and_yields_the_first_non-trivial_obfuscator_under_general_assumptions_in_the_standard_model._We_also_obtain_obfuscators_for_point_functions_with_multi-bit_output_and_for_prefix_matching.Our_assumption_is_that_there_is_a_one-way_permutation_wherein_any_polynomial-sized_circuit_inverts_the_permutation_on_at_most_a_polynomial_number_of_inputs._We_show_that_a_similar_assumption_is_in_fact_necessary,_and_that_our_assumption_holds_relative_to_a_random_permutation_oracle.Finally,_we_establish_two_impossibility_results_which_indicate_that_the_limitations_on_our_construction,_namely_simulating_only_adversaries_with_single-bit_output_and_using_nonuniform_advice_in_our_simulator,_are_in_some_sense_inherent.Previous_work_gave_negative_results_for_the_general_class_of_circuits_(Barak_et_al.,_Crypto_01)_and_positive_results_in_the_random_oracle_model_(Lynn_et_al.,_Eurocrypt_04)_or_under_non-standard_number-theoretic_assumptions_(Canetti,_Crypto_97)._This_work_represents_the_first_effort_to_bridge_the_gap_between_the_two_for_a_natural_class_of_functionalities.'	candidate size: 12499
Time cost for this pair is 138.3400 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

24368	'HERMES:_aggregative_LBS_via_a_trajectory_DB_engine__We_present_HERMES,_a_prototype_system_based_on_a_powerful_query_language_for_trajectory_databases,_which_enables_the_support_of_aggregative_Location-Based_Services_(LBS)._The_key_observation_that_motivates_HERMES_is_that_the_more_the_knowledge_in_hand_about_the_trajectory_of_a_mobile_user,_the_better_the_exploitation_of_the_advances_in_spatio-temporal_query_processing_for_providing_intelligent_LBS._HERMES_is_fully_incorporated_into_a_state-of-the-art_Object-Relational_DBMS,_and_its_demonstration_illustrates_its_flexibility_and_usefulness_for_delivering_custom-defined_LBS._'	candidate size: 12499
30770	'On_obfuscating_point_functions_We_investigate_the_possibility_of_obfuscating_point_functions_in_the_framework_of_Barak_et_al._from_Crypto_01._A_point_function_is_a_Boolean_function_that_assumes_the_value_1_at_exactly_one_point._Our_main_results_are_as_follows:We_provide_a_simple_construction_of_efficient_obfuscators_for_point_functions_for_a_slightly_relaxed_notion_of_obfuscation,_for_which_obfuscating_general_circuits_is_nonetheless_impossible._Our_construction_relies_on_the_existence_of_a_very_strong_one-way_permutation,_and_yields_the_first_non-trivial_obfuscator_under_general_assumptions_in_the_standard_model._We_also_obtain_obfuscators_for_point_functions_with_multi-bit_output_and_for_prefix_matching.Our_assumption_is_that_there_is_a_one-way_permutation_wherein_any_polynomial-sized_circuit_inverts_the_permutation_on_at_most_a_polynomial_number_of_inputs._We_show_that_a_similar_assumption_is_in_fact_necessary,_and_that_our_assumption_holds_relative_to_a_random_permutation_oracle.Finally,_we_establish_two_impossibility_results_which_indicate_that_the_limitations_on_our_construction,_namely_simulating_only_adversaries_with_single-bit_output_and_using_nonuniform_advice_in_our_simulator,_are_in_some_sense_inherent.Previous_work_gave_negative_results_for_the_general_class_of_circuits_(Barak_et_al.,_Crypto_01)_and_positive_results_in_the_random_oracle_model_(Lynn_et_al.,_Eurocrypt_04)_or_under_non-standard_number-theoretic_assumptions_(Canetti,_Crypto_97)._This_work_represents_the_first_effort_to_bridge_the_gap_between_the_two_for_a_natural_class_of_functionalities.'	candidate size: 12499
Time cost for this pair is 138.3400 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

24368	'HERMES:_aggregative_LBS_via_a_trajectory_DB_engine__We_present_HERMES,_a_prototype_system_based_on_a_powerful_query_language_for_trajectory_databases,_which_enables_the_support_of_aggregative_Location-Based_Services_(LBS)._The_key_observation_that_motivates_HERMES_is_that_the_more_the_knowledge_in_hand_about_the_trajectory_of_a_mobile_user,_the_better_the_exploitation_of_the_advances_in_spatio-temporal_query_processing_for_providing_intelligent_LBS._HERMES_is_fully_incorporated_into_a_state-of-the-art_Object-Relational_DBMS,_and_its_demonstration_illustrates_its_flexibility_and_usefulness_for_delivering_custom-defined_LBS._'	candidate size: 12499
30770	'On_obfuscating_point_functions_We_investigate_the_possibility_of_obfuscating_point_functions_in_the_framework_of_Barak_et_al._from_Crypto_01._A_point_function_is_a_Boolean_function_that_assumes_the_value_1_at_exactly_one_point._Our_main_results_are_as_follows:We_provide_a_simple_construction_of_efficient_obfuscators_for_point_functions_for_a_slightly_relaxed_notion_of_obfuscation,_for_which_obfuscating_general_circuits_is_nonetheless_impossible._Our_construction_relies_on_the_existence_of_a_very_strong_one-way_permutation,_and_yields_the_first_non-trivial_obfuscator_under_general_assumptions_in_the_standard_model._We_also_obtain_obfuscators_for_point_functions_with_multi-bit_output_and_for_prefix_matching.Our_assumption_is_that_there_is_a_one-way_permutation_wherein_any_polynomial-sized_circuit_inverts_the_permutation_on_at_most_a_polynomial_number_of_inputs._We_show_that_a_similar_assumption_is_in_fact_necessary,_and_that_our_assumption_holds_relative_to_a_random_permutation_oracle.Finally,_we_establish_two_impossibility_results_which_indicate_that_the_limitations_on_our_construction,_namely_simulating_only_adversaries_with_single-bit_output_and_using_nonuniform_advice_in_our_simulator,_are_in_some_sense_inherent.Previous_work_gave_negative_results_for_the_general_class_of_circuits_(Barak_et_al.,_Crypto_01)_and_positive_results_in_the_random_oracle_model_(Lynn_et_al.,_Eurocrypt_04)_or_under_non-standard_number-theoretic_assumptions_(Canetti,_Crypto_97)._This_work_represents_the_first_effort_to_bridge_the_gap_between_the_two_for_a_natural_class_of_functionalities.'	candidate size: 12499
Time cost for this pair is 138.3000 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0002
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0002

28718	'The_flow_complex:_a_data_structure_for_geometric_modeling_Structuring_finite_sets_of_points_is_at_the_heart_of_computational_geometry._Such_point_sets_arise_naturally_in_many_applications._Examples_in__R__3__are_point_sets_sampled_from_the_surface_of_a_solid_or_the_locations_of_atoms_in_a_molecule._A_first_step_in_processing_these_point_sets_is_to_organize_them_in_some_data_structure._Structuring_a_point_set_into_a_simplicial_complex_like_the_Delaunay_triangulation_has_turned_out_to_be_appropriate_for_many_modeling_tasks._Here_we_introduce_the_flow_complex_which_is_another_simplicial_complex_that_can_be_computed_efficiently_from_a_finite_set_of_points._The_flow_complex_turned_out_to_be_well_suited_for_surface_reconstruction_from_a_finite_sample_and_for_some_tasks_in_structural_biology._Here_we_study_mathematical_and_algorithmic_properties_of_the_flow_complex_and_show_how_to_exploit_it_in_applications.'	candidate size: 12499
29745	'Lower_bounds_for_graph_embeddings_and_combinatorial_preconditioners_Given_a_general_graph__G_,_a_fundamental_problem_is_to_find_a_spanning_tree__H__that_best_approximates__G__by_some_measure._Often_this_measure_is_some_combination_of_the_congestion_and_dilation_of_an_embedding_of__G__into__H_._One_example_is_the__routing_time___p_(_G_,__H_)_&#8804;__O__(congestion_+_dilation),_the_number_of_steps_necessary_to_route_pairwise_demands__G__on_network_links__H__in_the_store-and-forward_packet_routing_model._Another_is_the__condition_number___k__f_(_G_,__H_)_&#8804;__O__(congestion_&#183;_dilation),_the_square_root_of_which_bounds_the_number_of_iterations_necessary_to_solve_a_linear_system_with_coefficient_matrix__G__preconditioned_by__H__using_the_classical_conjugate_gradient_method._The_algorithmic_applications_of_being_able_to_find_(efficiently)_a_good_tree_approximation__H__for_a_graph__G__are_numerous;_but_what_if_no_good_tree_exists.In_this_paper,_we_seek_to_identify_the_class_of_graphs__G__which_are_intrinsically_difficult_to_approximate_by_a_particular_measure._It_is_easily_seen_that_with_respect_to_routing_time,__G__is_hardest_to_approximate_by_a_tree__H__precisely_when_it_contains_either_long_cycles_(which_yield_high_dilation)or_large_separators_(which_yield_high_congestion)._We_show_that_with_respect_to_condition_number,_the_existence_of_long_cycles_or_large_separators_in__G__is_sufficient_but_not_necessary_or_it_to_be_hardest_to_approximate,_by_demonstrating_a_nearly-linear_lower_bound_or_the_case_in_which__G__is_a_square_mesh._The_proof_uses_concepts_from_circuit_theory,_linear_algebra,_and_geometry,_and_it_generalizes_to_the_case_in_which__H__is_a_spanning_subgraph_of__G__of_Euler_characteristic__k_._The_result_has_consequences_or_the_design_of_preconditioners_or_symmetric__M_-matrices_and_perhaps_also_of_communication_networks.'	candidate size: 12499
Time cost for this pair is 176.4900 seconds
[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0285
[P_T]	[P_T]^(-1)	
precision: 0.0078
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0078

19841	'AS-index:_a_structure_for_string_search_using_n-grams_and_algebraic_signatures__AS-Index_is_a_new_index_structure_for_exact_string_search_in_disk_resident_databases._It_uses_hashing,_unlike_known_alternatives,_whether_baesd_on_trees_or_tries._It_typically_indexes_every_n-gram_in_the_database,_though_non-dense_indexing_is_also_possible._The_hash_function_uses_the_algebraic_signatures_of_all_n-grams._Use_of_hashing_provides_for_constant_index_access_time_for_arbitrarily_long_patterns,_unlike_other_structures_whose_search_cost_is_at_best_logarithmic._The_storage_overhead_of_AS-Index_is_basically_500_-_600%,_similar_to_that_of_alternatives_or_smaller._We_show_the_index_structure,_our_use_of_algebraic_signatures_and_the_search_algorithm._We_discuss_the_design_trade-offs_and_present_the_theoretical_and_experimental_performance_analysis._We_compare_the_AS-Index_to_main_alternatives._We_conclude_that_AS-Index_is_an_attractive_structure_and_we_indicate_directions_for_future_work._'	candidate size: 12499
24800	'Low-contention_data_structures__We_consider_the_problem_of_minimizing_contention_in_static_dictionary_data_structures,_where_the_contention_on_each_cell_is_measured_by_the_expected_number_of_probes_to_that_cell_given_an_input_that_is_chosen_from_a_distribution_that_is_not_known_to_the_query_algorithm_(but_that_may_be_known_when_the_data_structure_is_built)._When_all_positive_queries_are_equally_probable,_and_similarly_all_negative_queries_are_equally_probable,_we_show_that_it_is_possible_to_construct_a_data_structure_using_linear_space__s_,_a_constant_number_of_queries,_and_with_contention__O_(1/_s_)_on_each_cell,_corresponding_to_a_nearly-flat_load_distribution._All_of_these_quantities_are_asymptotically_optimal._For__arbitrary__query_distributions,_the_lack_of_knowledge_of_the_query_distribution_by_the_query_algorithm_prevents_perfect_load_leveling_in_this_case:_we_present_a_lower_bound,_based_on_VC-dimension,_that_shows_that_for_a_wide_range_of_data_structure_problems,_achieving_contention_even_within_a_polylogarithmic_factor_of_optimal_requires_a_cell-probe_complexity_of_&#937;(log_log__n_)._'	candidate size: 12499
Time cost for this pair is 186.1100 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0078
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0078
[P_P]	[P_T]	[P_T]^(-1)	
precision: 0.0078

23435	'Data_summaries_for_on-demand_queries_over_linked_data__Typical_approaches_for_querying_structured_Web_Data_collect_(crawl)_and_pre-process_(index)_large_amounts_of_data_in_a_central_data_repository_before_allowing_for_query_answering._However,_this_time-consuming_pre-processing_phase_however_leverages_the_benefits_of_Linked_Data_--_where_structured_data_is_accessible_live_and_up-to-date_at_distributed_Web_resources_that_may_change_constantly_--_only_to_a_limited_degree,_as_query_results_can_never_be_current._An_ideal_query_answering_system_for_Linked_Data_should_return_current_answers_in_a_reasonable_amount_of_time,_even_on_corpora_as_large_as_the_Web._Query_processors_evaluating_queries_directly_on_the_live_sources_require_knowledge_of_the_contents_of_data_sources._In_this_paper,_we_develop_and_evaluate_an_approximate_index_structure_summarising_graph-structured_content_of_sources_adhering_to_Linked_Data_principles,_provide_an_algorithm_for_answering_conjunctive_queries_over_Linked_Data_on_theWeb_exploiting_the_source_summary,_and_evaluate_the_system_using_synthetically_generated_queries._The_experimental_results_show_that_our_lightweight_index_structure_enables_complete_and_up-to-date_query_results_over_Linked_Data,_while_keeping_the_overhead_for_querying_low_and_providing_a_satisfying_source_ranking_at_no_additional_cost._'	candidate size: 12499
29745	'Lower_bounds_for_graph_embeddings_and_combinatorial_preconditioners_Given_a_general_graph__G_,_a_fundamental_problem_is_to_find_a_spanning_tree__H__that_best_approximates__G__by_some_measure._Often_this_measure_is_some_combination_of_the_congestion_and_dilation_of_an_embedding_of__G__into__H_._One_example_is_the__routing_time___p_(_G_,__H_)_&#8804;__O__(congestion_+_dilation),_the_number_of_steps_necessary_to_route_pairwise_demands__G__on_network_links__H__in_the_store-and-forward_packet_routing_model._Another_is_the__condition_number___k__f_(_G_,__H_)_&#8804;__O__(congestion_&#183;_dilation),_the_square_root_of_which_bounds_the_number_of_iterations_necessary_to_solve_a_linear_system_with_coefficient_matrix__G__preconditioned_by__H__using_the_classical_conjugate_gradient_method._The_algorithmic_applications_of_being_able_to_find_(efficiently)_a_good_tree_approximation__H__for_a_graph__G__are_numerous;_but_what_if_no_good_tree_exists.In_this_paper,_we_seek_to_identify_the_class_of_graphs__G__which_are_intrinsically_difficult_to_approximate_by_a_particular_measure._It_is_easily_seen_that_with_respect_to_routing_time,__G__is_hardest_to_approximate_by_a_tree__H__precisely_when_it_contains_either_long_cycles_(which_yield_high_dilation)or_large_separators_(which_yield_high_congestion)._We_show_that_with_respect_to_condition_number,_the_existence_of_long_cycles_or_large_separators_in__G__is_sufficient_but_not_necessary_or_it_to_be_hardest_to_approximate,_by_demonstrating_a_nearly-linear_lower_bound_or_the_case_in_which__G__is_a_square_mesh._The_proof_uses_concepts_from_circuit_theory,_linear_algebra,_and_geometry,_and_it_generalizes_to_the_case_in_which__H__is_a_spanning_subgraph_of__G__of_Euler_characteristic__k_._The_result_has_consequences_or_the_design_of_preconditioners_or_symmetric__M_-matrices_and_perhaps_also_of_communication_networks.'	candidate size: 12499
Time cost for this pair is 211.7800 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0078
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0078
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0078

29051	'SPREAD:_an_adaptive_scheme_for_redundant_and_fair_storage_in_dynamic_heterogeneous_storage_systems__In_this_paper_we_study_the_problem_of_designing_an_adaptive_hash_table_for_redundant_data_storage_in_a_system_of_storage_devices_with_arbitrary_capacities._Ideally,_such_a_hash_table_should_make_sure_that_(a)_a_storage_device_with__x_%_of_the_available_capacity_should_get__x_%_of_the_data,_(b)_the_copies_of_each_data_item_are_distributed_among_the_storage_devices_so_that_no_two_copies_are_stored_at_the_same_device,_and_(c)_only_a_near-minimum_amount_of_data_replacements_is_necessary_to_preserve_(a)_and_(b)_under_any_change_in_the_system._Hash_tables_satisfying_(a)_and_(c)_are_already_known,_and_it_is_not_difficult_to_construct_hash_tables_satisfying_(a)_and_(b)._However,_no_hash_table_is_known_so_far_that_can_satisfy_all_three_properties_as_long_as_this_is_in_principle_possible._We_present_a_strategy_called_SPREAD_that_solves_this_problem_for_the_first_time._As_long_as_(a)_and_(b)_can_in_principle_be_satisfied,_SPREAD_preserves_(a)_for_every_storage_device_within_a_(1_&plusmn;_&epsilon;)_factor,_with_high_probability,_where_&epsilon;_&gt;_0_can_be_made_arbitrarily_small,_guarantees_(b)_for_every_data_item,_and_only_needs_a_constant_factor_more_data_replacements_than_minimum_possible_in_order_to_preserve_(a)_and_(b)._'	candidate size: 12499
21567	'Structure-based_querying_of_proteins_using_wavelets_The_ability_to_retrieve_molecules_based_on_structural_similarity_has_use_in_many_applications,_from_disease_diagnosis_and_treatment_to_drug_discovery_and_design._In_this_paper,_we_present_a_method_to_represent_protein_molecules_that_allows_for_the_fast,_flexible_and_efficient_retrieval_of_similar_structures,_based_on_either_global_or_local_attributes._We_begin_by_computing_the_pair-wise_distance_between_amino_acids,_transforming_each_3D_structure_into_a_2D_distance_matrix._We_normalize_this_matrix_to_a_specific_size_and_apply_a_2D_wavelet_decomposition_to_generate_a_set_of_approximation_coefficients,_which_serves_as_our_global_feature_vector._This_transformation_reduces_the_overall_dimensionality_of_the_data_while_still_preserving_spatial_features_and_correlations._We_test_our_method_by_running_queries_on_three_different_protein_data_sets_that_have_been_used_previously_in_the_literature,_basing_our_comparisons_on_labels_taken_from_the_SCOP_database._We_find_that_our_method_significantly_outperforms_existing_approaches,_in_terms_of_retrieval_accuracy,_memory_utilization_and_execution_time._Specifically,_using_a_k-d_tree_and_running_a_10-nearest-neighbor_search_on_a_dataset_of_33,000_proteins_against_itself,_we_see_an_average_accuracy_of_89%_at_the_SCOP_SuperFamily_level_and_a_total_query_time_that_is_up_to_350_times_faster_than_previously_published_techniques._In_addition_to_processing_queries_based_on_global_similarity,_we_also_propose_innovative_extensions_to_effectively_match_proteins_based_solely_on_shared_local_substructures,_allowing_for_a_more_flexible_query_interface.'	candidate size: 12499
Time cost for this pair is 205.1400 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0026
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0026
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0026

22668	'__In_this_paper_we_discuss_simple_random_sampling_from_hash_files_on_secondary_storage._We_consider_both_iterative_and_batch_sampling_algorithms_from_both_static_and_dynamic_hashing_methods._The_static_methods_considered_are_open_addressing_hash_files_and_hash_files_with_separate_overflow_chains._The_dynamic_hashing_methods_considered_are_Linear_Hash_files_[Lit80]_and_Extendible_Hash_files_[FNPS79]._We_give_the_cost_of_sampling_in_terms_of_the_cost_of_successfully_searching_a_hash_file_and_show_how_to_exploit_features_of_the_dynamic_hashing_methods_to_improve_sampling_efficiency._'	candidate size: 12499
29010	'Why_simple_hash_functions_work:_exploiting_the_entropy_in_a_data_stream__Hashing_is_fundamental_to_many_algorithms_and_data_structures_widely_used_in_practice._For_theoretical_analysis_of_hashing,_there_have_been_two_main_approaches._First,_one_can_assume_that_the_hash_function_is_truly_random,_mapping_each_data_item_independently_and_uniformly_to_the_range._This_idealized_model_is_unrealistic_because_a_truly_random_hash_function_requires_an_exponential_number_of_bits_to_describe._Alternatively,_one_can_provide_rigorous_bounds_on_performance_when_explicit_families_of_hash_functions_are_used,_such_as_2-universal_or__O_(1)-wise_independent_families._For_such_families,_performance_guarantees_are_often_noticeably_weaker_than_for_ideal_hashing.___In_practice,_however,_it_is_commonly_observed_that_simple_hash_functions,_including_2-universal_hash_functions,_perform_as_predicted_by_the_idealized_analysis_for_truly_random_hash_functions._In_this_paper,_we_try_to_explain_this_phenomenon._We_demonstrate_that_the_strong_performance_of_universal_hash_functions_in_practice_can_arise_naturally_from_a_combination_of_the_randomness_of_the_hash_function_and_the_data._Specifially,_following_the_large_body_of_literature_on_random_sources_and_randomness_extraction,_we_model_the_data_as_coming_from_a_"block_source,"_whereby_each_new_data_item_has_some_"entropy"_given_the_previous_ones._As_long_as_the_(Renyi)_entropy_per_data_item_is_sufficiently_large,_it_turns_out_that_the_performance_when_choosing_a_hash_function_from_a_2-universal_family_is_essentially_the_same_as_for_a_truly_random_hash_function._We_describe_results_for_several_sample_applications,_including_linear_probing,_balanced_allocations,_and_Bloom_filters._'	candidate size: 12499
Time cost for this pair is 242.8200 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0026
[P_P]	[P_C]	[P_C]^(-1)	
precision: 0.0065
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0026

24481	'Sedna:_native_XML_database_management_system_(internals_overview)__We_present_a_native_XML_database_management_system,_Sedna,_which_is_implemented_from_scratch_as_a_full-featured_database_management_system_for_storing_large_amounts_of_XML_data._We_believe_that_the_key_contribution_of_this_system_is_an_improved_schema-based_clustering_storage_strategy_efficient_for_both_XML_querying_and_updating,_and_powered_by_a_novel_memory_management_technique._We_position_our_approach_with_respect_to_state-of-the-art_methods._'	candidate size: 12499
30912	'On_the_cell_probe_complexity_of_membership_and_perfect_hashing__We_study_two_fundamental_static_data_structure_problems,_membership_and_perfect_hashing,_in_Yaos_cell_probe_model._The_first_space_and_bit_probe_optimal_worst_case_upper_bound_is_given_for_the_membership_problem._We_also_give_a_new_efficient_membership_scheme_where_the_query_algorithm_makes_just_one_adaptive_choice,_and_probes_a_total_of_three_words._A_lower_bound_shows_that_two_word_probes_generally_do_not_suffice._For_minimal_perfect_hashing_we_show_a_tight_bit_probe_lower_bound,_and_give_a_simple_scheme_achieving_this_performance,_making_just_one_adaptive_choice._Linear_range_perfect_hashing_is_shown_to_be_implementable_with_the_same_number_of_bit_probes,_of_which_just___one__is_adaptive._In_contrast,_we_establish_that_for_sufficiently_sparse_sets,_non-adaptive_perfect_hashing_needs_exponentially_more_bit_probes._This_is_the_first_such_separation_of_adaptivity_and_non-adaptivity._'	candidate size: 12499
Time cost for this pair is 176.7900 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0026
[P_P]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0026
[P_T]	[P_T]^(-1)	[P_P]^(-1)	
precision: 0.0026

28460	'On_the_cryptographic_security_of_single_RSA_bits__The_ability_to_&ldquo;hide&rdquo;_one_bit_in_trapdoor_functions_has_recently_gained_much_interest_in_cryptography_research,_and_is_of_great_importance_in_many_transactions_protocols._In_this_paper_we_study_the_cryptographic_security_of_RSA_bits._In_particular,_we_show_that_unless_the_cryptanalyst_can_completely_break_the_RSA_encryption,_any_heuristic_he_uses_to_determine_the_least_significant_bit_of_the_cleartext_must_have_an_error_probability_greater_than_1&edivide;4&mdash;&egr;_A_similar_result_is_shown_for_Rabins_encryption_scheme._'	candidate size: 12499
28173	'Anonymity-preserving_data_collection_Protection_of_privacy_has_become_an_important_problem_in_data_mining._In_particular,_individuals_have_become_increasingly_unwilling_to_share_their_data,_frequently_resulting_in_individuals_either_refusing_to_share_their_data_or_providing_incorrect_data._In_turn,_such_problems_in_data_collection_can_affect_the_success_of_data_mining,_which_relies_on_sufficient_amounts_of_accurate_data_in_order_to_produce_meaningful_results._Random_perturbation_and_randomized_response_techniques_can_provide_some_level_of_privacy_in_data_collection,_but_they_have_an_associated_cost_in_accuracy._Cryptographic_privacy-preserving_data_mining_methods_provide_good_privacy_and_accuracy_properties._However,_in_order_to_be_efficient,_those_solutions_must_be_tailored_to_specific_mining_tasks,_thereby_losing_generality.In_this_paper,_we_propose_efficient_cryptographic_techniques_for_online_data_collection_in_which_data_from_a_large_number_of_respondents_is_collected_anonymously,_without_the_help_of_a_trusted_third_party._That_is,_our_solution_allows_the_miner_to_collect_the_original_data_from_each_respondent,_but_in_such_a_way_that_the_miner_cannot_link_a_respondents_data_to_the_respondent._An_advantage_of_such_a_solution_is_that,_because_it_does_not_change_the_actual_data,_its_success_does_not_depend_on_the_underlying_data_mining_problem._We_provide_proofs_of_the_correctness_and_privacy_of_our_solution,_as_well_as_experimental_data_that_demonstrates_its_efficiency._We_also_extend_our_solution_to_tolerate_certain_kinds_of_malicious_behavior_of_the_participants.'	candidate size: 12499
Time cost for this pair is 143.5500 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0016
[P_C]	[P_C]^(-1)	[P_P]^(-1)	
precision: 0.0048
[P_T]	[P_T]^(-1)	[P_P]	
precision: 0.0016

28462	'How_to_exchange_(secret)_keys__A_protocol_is_presented_whereby_two_adversaries_may_exchange_secrets,_though_neither_trusts_the_other._The_secrets_are_the_prime_factors_of_their_publicly_announced_composite_numbers._The_two_adversaries_can_exchange_their_secrets_bit_by_bit,_but_each_fears_the_other_will_cheat_by_sending_&ldquo;junk&rdquo;bits._To_solve_this_problem_we_show_how_each_of_the_two_can_prove,_for_each_bit_delivered,_that_the_bit_is_good.___Applications_are_suggested_to_such_electronic_business_transactions_as_the_signing_of_contracts_and_the_sending_of_certified_electronic_mail._'	candidate size: 12499
20734	'The_HP_time_vault_service:_exploiting_IBE_for_timed_release_of_confidential_information_Digital_information_is_increasingly_more_and_more_important_to_enable_interactions_and_transactions_on_the_Internet._On_the_other_hand,_leakages_of_sensitive_information_can_have_harmful_effects_for_people,_enterprises_and_governments.This_paper_focuses_on_the_problems_of_dealing_with_timed_release_of_confidential_information_and_simplifying_its_access_once_public:_it_is_a_common_issue_in_the_industry,_government_and_day-to-day_life.We_introduce_the_"HP_Time_Vault_Service",_based_on_the_emerging_Identifier-based_Encryption_(IBE)_cryptography_schema._IBE_(public)_encryption_keys_specify_the_disclosure_time._These_keys_are_used_to_encrypt_confidential_information._An_independent_time_server_generates_and_publishes_IBE_decryption_keys_correspondent_to_the_current_time,_at_predefined_intervals.We_discuss_the_advantages_of_this_approach_against_current_approaches_based_on_traditional_cryptography._A_web-service_based_prototype_is_described,_as_a_proof_of_concept.'	candidate size: 12499
Time cost for this pair is 461.3000 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0016
[P_A]	[P_A]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0016
[P_V]	[P_V]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0016

28460	'On_the_cryptographic_security_of_single_RSA_bits__The_ability_to_&ldquo;hide&rdquo;_one_bit_in_trapdoor_functions_has_recently_gained_much_interest_in_cryptography_research,_and_is_of_great_importance_in_many_transactions_protocols._In_this_paper_we_study_the_cryptographic_security_of_RSA_bits._In_particular,_we_show_that_unless_the_cryptanalyst_can_completely_break_the_RSA_encryption,_any_heuristic_he_uses_to_determine_the_least_significant_bit_of_the_cleartext_must_have_an_error_probability_greater_than_1&edivide;4&mdash;&egr;_A_similar_result_is_shown_for_Rabins_encryption_scheme._'	candidate size: 12499
21225	'An_RSA-based_time-bound_hierarchical_key_assignment_scheme_for_electronic_article_subscription_The_time-bound_hierarchical_key_assignment_problem_is_to_assign_time_sensitive_keys_to_security_classes_in_a_partially_ordered_hierarchy_so_that_legal_data_accesses_among_classes_can_be_enforced._Two_time-bound_hierarchical_key_assignment_schemes_have_been_proposed_in_the_literature,_but_both_of_them_were_proved_insecure_against_collusive_attacks._In_this_paper,_we_will_propose_an_RSA-based_time-bound_hierarchical_key_assignment_scheme_and_describe_its_possible_application._The_security_analysis_shows_that_the_new_scheme_is_safe_against_the_collusive_attacks.'	candidate size: 12499
Time cost for this pair is 464.3000 seconds
[P_T]	[P_T]^(-1)	
precision: 0.0016
[P_A]	[P_A]^(-1)	[P_T]	[P_T]^(-1)	
precision: 0.0016
